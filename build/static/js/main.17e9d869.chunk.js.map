{"version":3,"sources":["utils/Theme.js","pages/Unknown.js","utils/Constants.js","utils/Api.js","components/HomeChart.js","components/PortfolioTable.js","components/BuyOrderTable.js","components/SellOrderTable.js","pages/Home.js","pages/Portfolio.js","components/PriceChart.js","pages/BuyOrder.js","pages/Position.js","pages/Order.js","pages/Market.js","pages/Model.js","pages/History.js","pages/Auth.js","pages/Profile.js","components/Menu.js","components/Toast.js","App.js","index.js"],"names":["dark_theme","createMuiTheme","palette","type","light_theme","background","default","Unknown","this","props","theme","Grid","container","direction","alignItems","Typography","variant","style","color","common","white","black","React","Component","withStyles","withTheme","API_URL","get","path","opts","makeRequest","post","data","method","params","JSON","stringify","put","headers","a","token","localStorage","getItem","url","console","log","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","onerror","status","response","parse","Object","keys","map","key","encodeURIComponent","join","forEach","setRequestHeader","send","DataFormater","number","toString","toFixed","PercentageFormater","HomeChart","state","graph_type","height","width","strokeDasharray","dataKey","fill","tickFormatter","stackId","stroke","secondary","dark","light","primary","domain","entry","index","name","perf","position","formatter","diff","PortfolioTable","total_balance","portfolio","last_portfolio_history","cash","total_invested_value","holding_duration","open_date","close_date","delta","Math","abs","Date","days","floor","hours","toLocaleString","undefined","maximumFractionDigits","name_sorter","col","order","current_positions","sort","b","stock","localeCompare","number_sorter","p_l_sorter","current_rate","open_rate","num_of_shares","sorter","handleSorting","e","sorting_dir","currentTarget","id","setState","sorting_col","classes","date_time","day_num","getDay","setDate","getDate","day","month","getMonth","getFullYear","slice","item","xs","sm","Paper","padding","display","TableContainer","component","overflow","Table","size","stickyHeader","aria-label","TableHead","TableRow","TableCell","TableSortLabel","active","onClick","Hidden","smDown","align","TableBody","po","hover","history","push","scope","symbol","substring","sector","total_investment","BuyOrderTable","pending_buy_orders","bo","price_date","order_rate","created_at","timeZoneName","submited_at","canceled_at","SellOrderTable","pending_sell_orders","sell_order","Home","componentDidMount","window","addEventListener","updateGraph","retrieve_home","graphRef","current","g_height","clientHeight","g_width","clientWidth","pie_chart_data","portfolio_type","p_real","i","length","value","p_demo","area_chart_data","old_balance","first_portfolio_history","latent_p_l","current_balance","split","toggle_graph_dd","graph_dd","handle_graph_change","target","loading","last_price_date","last_order_date","last_portfolio_date","last_submited_order_date","createRef","removeEventListener","spacing","justify","minHeight","CircularProgress","creation_date","last_update","currency","initial_balance","performance_to_date","num_of_days","annualized_performance","updated_at","Container","flexGrow","ref","FormControl","Select","disableUnderline","onClose","onOpen","onChange","MenuItem","retrieve_history_details","Portfolio","retrieve_portfolio","then","resp","demo_portfolio","current_demo_positions","real_portfolio","current_real_positions","positions","round","PriceChart","min","max","strokeWidth","high_sma_val","low_sma_val","info","x","label","Position","retrieve_order_details","order_id","buy_order","price_df","line_chart_data","date","close","high_sma","low_sma","sma_position","model","price_max","arr","flat","apply","price_min","location","search","fontWeight","formatMatcher","executed_at","terminated_at","sma_backtest","model_cagr","precision","score","retrieve_position_details","pos_id","stop_loss","take_profit","Fragment","Order","retrieve_order","orders_demo","orders","orders_real","order_status","canceled","terminated","submited","executed","colSpan","whiteSpace","textOverflow","toLocaleTimeString","Market","retrieve_market","stocks","renderStocks","industry","last_price","last_real_pred","prediction","last_demo_pred","predictions","margin","tableLayout","neural_network","nn_name","Model","retrieve_model","render_Sma_backtests","sma_backtests","parseFloat","buy","update_sma_positions","History","retrieve_history","history_demo","history_real","handle_open","open_id","hi","IconButton","close_rate","old_positions","Auth","handleChange","sign_up","errors","non_field_errors","TextField","fullWidth","required","autoFocus","error","username","helperText","email","password","Button","log_in","cursor","Profile","md","lg","xl","defaultValue","user","broker_username","broker_password","marginVertical","Switch","checked","update_portfolio","labelId","event","pos_size","Divider","update_user","logout","Menu","toggle_drawer","drawer_open","drawer","SwipeableDrawer","anchor","Link","href","AppBar","marginBottom","Toolbar","justifyContent","lgUp","edge","mdDown","List","className","appBar_list","ListItem","button","ListItemText","Box","handlePortfolioChange","handleThemeChange","AccountCircle","drawer_list","flexDirection","Toast","active_index","Alert","severity","bottom","left","minWidth","opacity","message","App","setItem","retrieveHome","logged_in","err","clear","display_toast","message_type","setTimeout","ThemeProvider","responsiveFontSizes","CssBaseline","exact","render","from","to","BuyOrder","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.17e9d869.chunk.js","sourcesContent":["import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nexport const dark_theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\n\nexport const light_theme = createMuiTheme({\n    palette: {\n      type: 'light',\n      background: {\n        default: '#F1F1F1',\n        },\n    },\n});","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass Unknown extends React.Component {\n\n    render() {\n    const { theme } = this.props;\n    return (\n        <Grid\n            container\n            direction='column'\n            alignItems='center'\n        >   \n            <Typography variant='h1' style={{color:this.props.theme.palette.type === 'dark' ? this.props.theme.palette.common.white : this.props.theme.palette.common.black}}>\n                404\n            </Typography>\n        </Grid>\n    ); \n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Unknown);","\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    var server =  'http://localhost:8000/'\n} else {\n    var server =  '/'\n}\n\nexport var API_URL = server\nexport const APP_NAME = 'TraderServer'","import {API_URL} from './Constants'\n\nexport const get = (path, opts = {}) => {\n  return makeRequest(path, opts)\n}\n\nexport const post = (path, data, opts) => {\n  return makeRequest(path, {\n    method: \"POST\",\n    params: JSON.stringify(data),\n    opts: opts\n  })\n}\n\nexport const put = (path, data, opts) => {\n  return makeRequest(path, {\n    method: \"PUT\",\n    params: JSON.stringify(data),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n}\n\nexport const patch = (path, data, opts) => {\n  return makeRequest(path, {\n    method: \"PATCH\",\n    params: JSON.stringify(data),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n}\n\nexport const destroy = (path, opts) => {\n  return makeRequest(path, { method: \"DELETE\" })\n}\n\nexport const makeRequest = async (path, opts) => {\n  let token = localStorage.getItem('token')\n  let url = API_URL + path\n  console.log(url)\n  let method = opts.method || \"GET\"\n  opts.headers = opts.headers || {}\n//   opts.headers[\"Locale\"] = i18n.locale\n//   opts.headers[\"Timezone\"] = Localization.timezone\n  opts.headers[\"Accept\"] = \"application/json\"\n  opts.headers[\"Content-Type\"] = \"application/json\"\n  if (token !== null) {\n    opts.headers[\"Authorization\"] = `Token ${token}`\n  }\n\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    var params = opts.params;\n\n    xhr.open(method, url);\n    xhr.onload = function () {\n      resolve(this)\n    };\n\n    xhr.onerror = function () {\n      reject({\n        status: xhr.status,\n        response: JSON.parse(xhr.response),\n      });\n    };\n\n    // Need to stringify if we've been given an object\n    // If we have a string, this is skipped.\n    if (params && typeof params === 'object') {\n      params = Object.keys(params).map(function (key) {\n        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      }).join('&');\n    }\n\n    if (opts.headers) {\n      Object.keys(opts.headers).forEach(function (key) {\n        xhr.setRequestHeader(key, opts.headers[key]);\n      });\n    }\n\n    xhr.send(params);\n  });\n}","import React from 'react';\nimport { AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip, BarChart, LabelList, Bar, Cell } from 'recharts';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nconst DataFormater = (number) => {\n  if(number > 1000000000){\n    return (number/1000000000).toString() + 'B';\n  }else if(number > 1000000){\n    return (number/1000000).toString() + 'M';\n  }else if(number > 1000){\n    return (number/1000).toString() + 'K';\n  }else{\n    return number.toFixed(1).toString();\n  }\n}\n\nconst PercentageFormater = (number) => {\n  return number.toFixed(1) + '%'\n}\n\nclass HomeChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n\n    };\n  }\n\n  render() {\n    const { theme } = this.props;\n    switch (this.props.graph_type) {\n      case 'investments':\n        return(\n          <AreaChart height={this.props.height*0.82} width={this.props.width*0.98} data={this.props.data} >\n            <CartesianGrid strokeDasharray=\"3 3\"/>\n            <XAxis dataKey=\"name\" fill={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.common.white : this.props.theme.palette.common.black}/>\n            <YAxis tickFormatter={DataFormater} fill={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.common.white : this.props.theme.palette.common.black} />\n            <Tooltip />\n            <Area type='monotone' dataKey='total_invested_value' stackId='1' stroke={theme.palette.type === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.light} fill={theme.palette.type === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.light} />\n          </AreaChart>\n        )\n      case 'cash':\n        return(\n          <AreaChart height={this.props.height*0.82} width={this.props.width*0.98} data={this.props.data} >\n            <CartesianGrid strokeDasharray=\"3 3\"/>\n            <XAxis dataKey=\"name\" fill={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.common.white : this.props.theme.palette.common.black}/>\n            <YAxis tickFormatter={DataFormater} fill={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.common.white : this.props.theme.palette.common.black} />\n            <Tooltip />\n            <Area type='monotone' dataKey='cash' stackId='1' stroke={theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.light} fill={theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.light} />\n          </AreaChart>\n        )\n      case 'cash_investments':\n        return(\n          <AreaChart height={this.props.height*0.82} width={this.props.width*0.98} data={this.props.data} >\n            <CartesianGrid strokeDasharray=\"3 3\"/>\n            <XAxis dataKey=\"name\" fill={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.common.white : this.props.theme.palette.common.black}/>\n            <YAxis tickFormatter={DataFormater} fill={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.common.white : this.props.theme.palette.common.black} />\n            <Tooltip />\n            <Area type='monotone' dataKey='total_invested_value' stackId='1' stroke={theme.palette.type === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.light} fill={theme.palette.type === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.light} />\n            <Area type='monotone' dataKey='cash' stackId='1' stroke={theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.light} fill={theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.light} />\n          </AreaChart>\n        )\n      case 'performance_pct':\n        return(\n          <BarChart height={this.props.height*0.82} width={this.props.width*0.98} data={this.props.data} >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis tickFormatter={PercentageFormater} domain={[-10,10]}/>\n            <Bar dataKey=\"perf\" >\n              {this.props.data.map((entry, index) => (\n                <Cell key={entry.name} fill={entry.perf > 0 ? 'green' : 'red' }/>\n              ))}\n              <LabelList dataKey=\"perf\" position=\"top\" formatter={PercentageFormater} />\n          </Bar>\n          </BarChart>\n        )\n      case 'performance_curr':\n        return(\n          <BarChart height={this.props.height*0.82} width={this.props.width*0.98} data={this.props.data} >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis tickFormatter={DataFormater}/>\n            <Bar dataKey=\"diff\" >\n              {this.props.data.map((entry, index) => (\n                <Cell key={entry.name} fill={entry.diff > 0 ? 'green' : 'red' }/>\n              ))}\n              <LabelList dataKey=\"diff\" position=\"top\" formatter={DataFormater} />\n          </Bar>\n          </BarChart>\n        )\n      default:\n        break;\n    }\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(HomeChart);\n","import React from 'react';\nimport { Typography, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TableSortLabel, Hidden} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass PortfolioTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        sorting_col: 'total_investment',\n        sorting_dir: 'asc',\n    };\n  } \n\n  total_balance = (portfolio) => {\n    var cash = portfolio.last_portfolio_history.cash\n    var inv = portfolio.last_portfolio_history.total_invested_value\n    return cash + inv\n  }\n\n  holding_duration = (open_date, close_date) => {\n    var delta = Math.abs(new Date(open_date) - new Date(close_date)) / 1000;\n    // calculate (and subtract) whole days\n    var days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n    // calculate (and subtract) whole hours\n    var hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600;\n    \n    if (days < 1){\n      return `${(hours/24).toLocaleString(undefined, {maximumFractionDigits: 2})} day` \n    } else {\n      return `${days},${(hours/24).toLocaleString(undefined, {maximumFractionDigits: 0})} days` \n    }\n  }\n\n  name_sorter = (col, order) => {\n    if (order === 'asc') {\n        this.props.portfolio.current_positions.sort((a, b) => a.stock[col].localeCompare(b.stock[col]))\n    } else {\n        this.props.portfolio.current_positions.sort((a, b) => b.stock[col].localeCompare(a.stock[col]))\n    }\n  }\n\n  number_sorter = (col, order) => {\n    if (order === 'asc') {\n        this.props.portfolio.current_positions.sort((a,b) => a[col] < b[col] ? 1 : -1)\n    } else {\n        this.props.portfolio.current_positions.sort((a,b) => a[col] > b[col] ? 1 : -1)\n    }\n  }\n\n  p_l_sorter = (col, order) => {\n    if (order === 'asc') {\n        this.props.portfolio.current_positions.sort((a,b) => ((a.current_rate - a.open_rate) * a.num_of_shares) < ((b.current_rate - b.open_rate) * b.num_of_shares) ? 1 : -1)\n    } else {\n        this.props.portfolio.current_positions.sort((a,b) => ((a.current_rate - a.open_rate) * a.num_of_shares) > ((b.current_rate - b.open_rate) * b.num_of_shares) ? 1 : -1)\n    }\n  }\n\n  sorter = (col, order) => {\n    switch (col) {\n        case 'symbol':\n            this.name_sorter(col, order)\n        break;\n        case 'name':\n            this.name_sorter(col, order)\n            break;\n        case 'sector':\n            this.name_sorter(col, order)\n            break;\n        case 'total_investment':\n            this.number_sorter(col, order)\n            break;\n        case 'alloc_percentage':\n            this.number_sorter('total_investment', order)\n            break;\n        case 'P_L':\n            this.p_l_sorter(col, order)\n            break;\n        case 'open_date':\n            this.number_sorter(col, order)\n            break;\n        default:\n            console.log('Unknown col');\n    }\n  }\n\n  handleSorting = (e) => {\n    if (this.state.sorting_dir === 'asc') {\n      this.sorter(e.currentTarget.id, 'desc')\n      this.setState({sorting_col: e.currentTarget.id, sorting_dir:'desc'})\n    } else {\n      this.sorter(e.currentTarget.id, 'asc')\n      this.setState({sorting_col: e.currentTarget.id, sorting_dir:'asc'})\n    }\n  }\n\n\n  render() {\n    const { classes, theme, portfolio} = this.props;\n    var date_time = new Date();\n    var day_num = date_time.getDay()\n\n    if (day_num === 0 || day_num === 6 || day_num === 1){\n      if (day_num === 1){\n        date_time.setDate(date_time.getDate() - 3);\n      }\n      if (day_num === 0){\n        date_time.setDate(date_time.getDate() - 2);\n      }\n      if (day_num === 6){\n        date_time.setDate(date_time.getDate() - 1);\n      }\n    } else {\n      date_time.setDate(date_time.getDate() - 1);\n    }\n\n    var day = date_time.getDate()\n    var month = date_time.getMonth() + 1 //January is 0!\n    var year = date_time.getFullYear();\n    var last_business_day = year + '-' + ('0' + month).slice(-2) + '-' + ('0' + day).slice(-2);\n\n    return (\n        <Grid item xs={12} sm={12} >\n            <Paper style={{padding:5}}>\n            <Typography variant='h5' style={{display: 'inline-block', padding:5}}> Portfolio </Typography>\n            <TableContainer component={Paper} style={{ overflow: 'auto', height: '300px' }} >\n                <Table size=\"small\" stickyHeader aria-label=\"sticky table\" >\n                    <TableHead>\n                        <TableRow>\n                        <TableCell>Ticker\n                            <TableSortLabel active={this.state.sorting_col==='symbol'} direction={this.state.sorting_dir} id='symbol' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        <Hidden smDown>\n                          <TableCell>Name\n                              <TableSortLabel active={this.state.sorting_col==='name'} direction={this.state.sorting_dir} id='name' onClick={e => {this.handleSorting(e)}} />\n                          </TableCell>\n                          <TableCell>Sector\n                              <TableSortLabel active={this.state.sorting_col==='sector'} direction={this.state.sorting_dir} id='sector' onClick={e => {this.handleSorting(e)}} />\n                          </TableCell>\n                        </Hidden>\n                        <TableCell align=\"right\">Amount \n                            <TableSortLabel active={this.state.sorting_col==='total_investment'} direction={this.state.sorting_dir} id='total_investment' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        <Hidden smDown>\n                          <TableCell align=\"right\">% \n                              <TableSortLabel active={this.state.sorting_col==='alloc_percentage'} direction={this.state.sorting_dir} id='alloc_percentage' onClick={e => {this.handleSorting(e)}} />\n                          </TableCell>\n                          <TableCell align=\"right\">P/L $\n                              <TableSortLabel active={this.state.sorting_col==='P_L_$'} direction={this.state.sorting_dir} id='P_L' onClick={e => {this.handleSorting(e)}} />\n                          </TableCell>\n                        </Hidden>\n                        <TableCell align=\"right\">P/L %\n                            <TableSortLabel active={this.state.sorting_col==='P_L_%'} direction={this.state.sorting_dir} id='P_L' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        <TableCell align=\"right\">Duration\n                            <TableSortLabel active={this.state.sorting_col==='open_date'} direction={this.state.sorting_dir} id='open_date' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {portfolio!=null && portfolio.current_positions.map((po, index) => (\n                            <TableRow hover key={po.id} onClick={() => {this.props.history.push('/position/?id='+po.id)}}>\n                                <TableCell component=\"th\" scope=\"row\">{po.stock.symbol.substring(0,20)}  </TableCell>\n                                <Hidden smDown>\n                                  <TableCell component=\"th\" scope=\"row\">{po.stock.name.substring(0,20)}  </TableCell>\n                                  <TableCell scope=\"row\">{po.stock.sector}  </TableCell>\n                                </Hidden>\n                                <TableCell align=\"right\"> {po.total_investment.toLocaleString(undefined, {maximumFractionDigits: 0 })} </TableCell>\n                                <Hidden smDown>\n                                  <TableCell align=\"right\"> { ((po.total_investment / this.total_balance(portfolio.portfolio)) * 100).toFixed(2)}% </TableCell>\n                                  <TableCell align=\"right\" style={{color: po.current_rate > po.open_rate ? 'green' : 'red'}} > \n                                  {((po.current_rate - po.open_rate) * po.num_of_shares).toLocaleString(undefined, {maximumFractionDigits: 0 })}\n                                  </TableCell>\n                                </Hidden>\n                                <TableCell align=\"right\" style={{color: po.current_rate > po.open_rate ? 'green' : 'red'}} >\n                                    {((po.current_rate/po.open_rate-1)*100).toFixed(2)}%\n                                </TableCell>\n                                <TableCell align=\"right\" style={{color: po.open_date === null && 'red'}}> {po.open_date === null ? 'None' : this.holding_duration(po.open_date, new Date())} </TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                </Table>\n            </TableContainer>\n            </Paper>\n        </Grid>\n    ); \n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(PortfolioTable);","import React from 'react';\nimport { Typography, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TableSortLabel} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass BuyOrderTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        sorting_col: 'total_investment',\n        sorting_dir: 'asc',\n    };\n  } \n\n  name_sorter = (col, order) => {\n    if (order === 'asc') {\n        this.props.portfolio.pending_buy_orders.sort((a, b) => a.stock[col].localeCompare(b.stock[col]))\n    } else {\n        this.props.portfolio.pending_buy_orders.sort((a, b) => b.stock[col].localeCompare(a.stock[col]))\n    }\n  }\n\n  number_sorter = (col, order) => {\n    if (order === 'asc') {\n        this.props.portfolio.pending_buy_orders.sort((a,b) => a[col] < b[col] ? 1 : -1)\n    } else {\n        this.props.portfolio.pending_buy_orders.sort((a,b) => a[col] > b[col] ? 1 : -1)\n    }\n  }\n\n  p_l_sorter = (col, order) => {\n    if (order === 'asc') {\n        this.props.portfolio.pending_buy_orders.sort((a,b) => ((a.current_rate - a.open_rate) * a.num_of_shares) < ((b.current_rate - b.open_rate) * b.num_of_shares) ? 1 : -1)\n    } else {\n        this.props.portfolio.pending_buy_orders.sort((a,b) => ((a.current_rate - a.open_rate) * a.num_of_shares) > ((b.current_rate - b.open_rate) * b.num_of_shares) ? 1 : -1)\n    }\n  }\n\n  sorter = (col, order) => {\n    console.log('sorter')\n    switch (col) {\n        case 'symbol':\n            this.name_sorter(col, order)\n        break;\n        case 'name':\n            this.name_sorter(col, order)\n            break;\n        case 'total_investment':\n            this.number_sorter(col, order)\n            break;\n        case 'price_date':\n            this.number_sorter(col, order)\n            break;\n        case 'order_rate':\n            this.number_sorter(col, order)\n            break;\n        case 'current_rate':\n            this.number_sorter(col, order)\n            break;\n        case 'created_at':\n            this.number_sorter(col, order)\n            break;\n        case 'submited_at':\n            this.number_sorter(col, order)\n            break;\n        case 'canceled_at':\n            this.number_sorter(col, order)\n            break;\n        default:\n            console.log('Unknown col');\n    }\n  }\n\n  handleSorting = (e) => {\n    if (this.state.sorting_dir === 'asc') {\n      this.sorter(e.currentTarget.id, 'desc')\n      this.setState({sorting_col: e.currentTarget.id, sorting_dir:'desc'})\n    } else {\n      this.sorter(e.currentTarget.id, 'asc')\n      this.setState({sorting_col: e.currentTarget.id, sorting_dir:'asc'})\n    }\n  }\n\n  render() {\n    const { classes, theme, portfolio} = this.props;\n    return (\n        <Grid item xs={12} sm={12} >\n            <Paper style={{padding:5}}>\n            <Typography variant='h5' style={{display: 'inline-block', padding:5}}> Buy Orders </Typography>\n                <TableContainer component={Paper} style={{ overflow: 'auto', height: '300px' }} >\n                    <Table size=\"small\" stickyHeader aria-label=\"sticky table\" >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Ticker\n                                <TableSortLabel active={this.state.sorting_col==='symbol'} direction={this.state.sorting_dir} id='symbol' onClick={e => {this.handleSorting(e)}} />\n                            </TableCell>\n                            <TableCell>Name\n                                <TableSortLabel active={this.state.sorting_col==='name'} direction={this.state.sorting_dir} id='name' onClick={e => {this.handleSorting(e)}} />\n                            </TableCell>\n                            <TableCell>Price date\n                                <TableSortLabel active={this.state.sorting_col==='price_date'} direction={this.state.sorting_dir} id='price_date' onClick={e => {this.handleSorting(e)}} />\n                            </TableCell>\n                            <TableCell>Neural network </TableCell>\n                            <TableCell align=\"right\">Amount \n                                <TableSortLabel active={this.state.sorting_col==='total_investment'} direction={this.state.sorting_dir} id='total_investment' onClick={e => {this.handleSorting(e)}} />\n                            </TableCell>\n                            <TableCell align=\"right\">Order price\n                                <TableSortLabel active={this.state.sorting_col==='order_rate'} direction={this.state.sorting_dir} id='order_rate' onClick={e => {this.handleSorting(e)}} />\n                            </TableCell>\n                            <TableCell align=\"right\">Current price\n                                <TableSortLabel active={this.state.sorting_col==='current_rate'} direction={this.state.sorting_dir} id='current_rate' onClick={e => {this.handleSorting(e)}} />\n                            </TableCell>\n                            <TableCell align=\"right\">created_at\n                                <TableSortLabel active={this.state.sorting_col==='created_at'} direction={this.state.sorting_dir} id='created_at' onClick={e => {this.handleSorting(e)}} />\n                            </TableCell>\n                            <TableCell align=\"right\">submited_at\n                                <TableSortLabel active={this.state.sorting_col==='submited_at'} direction={this.state.sorting_dir} id='submited_at' onClick={e => {this.handleSorting(e)}} />\n                            </TableCell>\n                            <TableCell align=\"right\">canceled_at\n                                <TableSortLabel active={this.state.sorting_col==='canceled_at'} direction={this.state.sorting_dir} id='canceled_at' onClick={e => {this.handleSorting(e)}} />\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {portfolio!=null && portfolio.pending_buy_orders.map((bo) => (\n                            <TableRow key={bo.id} hover onClick={() => {this.props.history.push('/buy_order/?id='+bo.id)}}>\n                                <TableCell component=\"th\" scope=\"row\">{bo.stock.symbol} </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">{bo.stock.name.substring(0,20)} </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">{bo.price_date} </TableCell>\n                                <TableCell component=\"th\" scope=\"row\" > {'tst'}</TableCell>\n                                <TableCell align=\"right\"> {bo.total_investment.toLocaleString(undefined, {maximumFractionDigits: 0 })} </TableCell>\n                                <TableCell align=\"right\"> {bo.order_rate.toLocaleString(undefined, {maximumFractionDigits: 0 })} </TableCell>\n                                <TableCell align=\"right\"> {bo.current_rate.toLocaleString(undefined, {maximumFractionDigits: 0 })} </TableCell>\n                                <TableCell align=\"right\"> {bo.created_at === null ? '-' : new Date(bo.created_at).toLocaleString({timeZoneName:'short'})} </TableCell>\n                                <TableCell align=\"right\"> {bo.submited_at === null ? 'Not sent' : new Date(bo.submited_at).toLocaleString({timeZoneName:'short'})} </TableCell>\n                                <TableCell align=\"right\"> {bo.canceled_at === null ? '-' : new Date(bo.canceled_at).toLocaleString({timeZoneName:'short'})} </TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n            </TableContainer>\n            </Paper>\n        </Grid>\n    ); \n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(BuyOrderTable);","import React from 'react';\nimport { Typography, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TableSortLabel} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass SellOrderTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        sorting_col: 'total_investment',\n        sorting_dir: 'asc',\n    };\n  } \n\n  total_balance = (portfolio) => {\n    var cash = portfolio.last_portfolio_history.cash\n    var inv = portfolio.last_portfolio_history.total_invested_value\n    return cash + inv\n  }\n\n  holding_duration = (open_date, close_date) => {\n    var delta = Math.abs(new Date(open_date) - new Date(close_date)) / 1000;\n    // calculate (and subtract) whole days\n    var days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n    // calculate (and subtract) whole hours\n    var hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600;\n    \n    if (days < 1){\n      return `${(hours/24).toLocaleString(undefined, {maximumFractionDigits: 2})} day` \n    } else {\n      return `${days},${(hours/24).toLocaleString(undefined, {maximumFractionDigits: 0})} day(s)` \n    }\n  }\n\n  name_sorter = (col, order) => {\n    if (order === 'asc') {\n        this.props.portfolio.pending_sell_orders.sort((a, b) => a.stock[col].localeCompare(b.stock[col]))\n    } else {\n        this.props.portfolio.pending_sell_orders.sort((a, b) => b.stock[col].localeCompare(a.stock[col]))\n    }\n  }\n\n  number_sorter = (col, order) => {\n    if (col == 'submited_at'){\n        if (order === 'asc') {\n            this.props.portfolio.pending_sell_orders.sort((a,b) => a.sell_order[0][col] < b.sell_order[0][col] ? 1 : -1)\n        } else {\n            this.props.portfolio.pending_sell_orders.sort((a,b) => a.sell_order[0][col] > b.sell_order[0][col] ? 1 : -1)\n        }\n    } else {\n        if (order === 'asc') {\n            this.props.portfolio.pending_sell_orders.sort((a,b) => a[col] < b[col] ? 1 : -1)\n        } else {\n            this.props.portfolio.pending_sell_orders.sort((a,b) => a[col] > b[col] ? 1 : -1)\n        }\n    }\n  }\n\n  p_l_sorter = (col, order) => {\n    if (order === 'asc') {\n        this.props.portfolio.pending_sell_orders.sort((a,b) => ((a.current_rate - a.open_rate) * a.num_of_shares) < ((b.current_rate - b.open_rate) * b.num_of_shares) ? 1 : -1)\n    } else {\n        this.props.portfolio.pending_sell_orders.sort((a,b) => ((a.current_rate - a.open_rate) * a.num_of_shares) > ((b.current_rate - b.open_rate) * b.num_of_shares) ? 1 : -1)\n    }\n  }\n\n  sorter = (col, order) => {\n    switch (col) {\n        case 'symbol':\n            this.name_sorter(col, order)\n        break;\n        case 'name':\n            this.name_sorter(col, order)\n            break;\n        case 'sector':\n            this.name_sorter(col, order)\n            break;\n        case 'total_investment':\n            this.number_sorter(col, order)\n            break;\n        case 'alloc_percentage':\n            this.number_sorter('total_investment', order)\n            break;\n        case 'P_L':\n            this.p_l_sorter(col, order)\n            break;\n        case 'open_date':\n            this.number_sorter(col, order)\n            break;\n        case 'submited_at':\n            this.number_sorter(col, order)\n            break;\n        default:\n            console.log('Unknown col');\n    }\n  }\n\n  handleSorting = (e) => {\n    if (this.state.sorting_dir === 'asc') {\n      this.sorter(e.currentTarget.id, 'desc')\n      this.setState({sorting_col: e.currentTarget.id, sorting_dir:'desc'})\n    } else {\n      this.sorter(e.currentTarget.id, 'asc')\n      this.setState({sorting_col: e.currentTarget.id, sorting_dir:'asc'})\n    }\n  }\n\n  render() {\n    const { classes, theme, portfolio} = this.props;\n\n    var date_time = new Date();\n    var day_num = date_time.getDay()\n\n    if (day_num === 0 || day_num === 6 || day_num === 1){\n      if (day_num === 1){\n        date_time.setDate(date_time.getDate() - 3);\n      }\n      if (day_num === 0){\n        date_time.setDate(date_time.getDate() - 2);\n      }\n      if (day_num === 6){\n        date_time.setDate(date_time.getDate() - 1);\n      }\n    } else {\n      date_time.setDate(date_time.getDate() - 1);\n    }\n\n    var day = date_time.getDate()\n    var month = date_time.getMonth() + 1 //January is 0!\n    var year = date_time.getFullYear();\n    var last_business_day = year + '-' + ('0' + month).slice(-2) + '-' + ('0' + day).slice(-2);\n    return (\n        <Grid item xs={12} sm={12} >\n            <Paper style={{padding:5}}>\n            <Typography variant='h5' style={{display: 'inline-block', padding:5}}> Sell Orders </Typography>\n            <TableContainer component={Paper} style={{ overflow: 'auto', height: '300px' }} >\n                <Table size=\"small\" stickyHeader aria-label=\"sticky table\" >\n                    <TableHead>\n                        <TableRow>\n                        <TableCell>Ticker\n                            <TableSortLabel active={this.state.sorting_col==='symbol'} direction={this.state.sorting_dir} id='symbol' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        <TableCell>Name\n                            <TableSortLabel active={this.state.sorting_col==='name'} direction={this.state.sorting_dir} id='name' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        <TableCell>Sector\n                            <TableSortLabel active={this.state.sorting_col==='sector'} direction={this.state.sorting_dir} id='sector' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        <TableCell align=\"right\">Amount \n                            <TableSortLabel active={this.state.sorting_col==='total_investment'} direction={this.state.sorting_dir} id='total_investment' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n\n                        <TableCell align=\"right\">P/L $\n                            <TableSortLabel active={this.state.sorting_col==='P_L_$'} direction={this.state.sorting_dir} id='P_L' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        <TableCell align=\"right\">P/L %\n                            <TableSortLabel active={this.state.sorting_col==='P_L_%'} direction={this.state.sorting_dir} id='P_L' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        <TableCell align=\"right\">Duration\n                            <TableSortLabel active={this.state.sorting_col==='open_date'} direction={this.state.sorting_dir} id='open_date' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        <TableCell align=\"right\">Submited\n                            <TableSortLabel active={this.state.sorting_col==='submited_at'} direction={this.state.sorting_dir} id='submited_at' onClick={e => {this.handleSorting(e)}} />\n                        </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {portfolio!=null && portfolio.pending_sell_orders.map((po, index) => (\n                            <TableRow hover key={po.id} onClick={() => {this.props.history.push('/position/?id='+po.id)}}>\n                                <TableCell component=\"th\" scope=\"row\">{po.stock.symbol.substring(0,20)}  </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">{po.stock.name.substring(0,20)}  </TableCell>\n                                <TableCell scope=\"row\">{po.stock.sector}  </TableCell>\n                                <TableCell align=\"right\"> {po.total_investment.toLocaleString(undefined, {maximumFractionDigits: 0 })} </TableCell>\n                                <TableCell align=\"right\" style={{color: po.current_rate > po.open_rate ? 'green' : 'red'}} > \n                                {((po.current_rate - po.open_rate) * po.num_of_shares).toLocaleString(undefined, {maximumFractionDigits: 0 })}\n                                </TableCell>\n                                <TableCell align=\"right\" style={{color: po.current_rate > po.open_rate ? 'green' : 'red'}} >\n                                    {((po.current_rate/po.open_rate-1)*100).toFixed(2)}%\n                                </TableCell>\n                                <TableCell align=\"right\" style={{color: po.open_date === null && 'red'}}> {po.open_date === null ? 'None' : this.holding_duration(po.open_date, new Date())} </TableCell>\n                                <TableCell align=\"right\"> {po.sell_order[0].submited_at === null ? 'Not sent' : new Date(po.sell_order[0].submited_at).toLocaleString({timeZoneName:'short'})} </TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                </Table>\n            </TableContainer>\n            </Paper>\n        </Grid>\n    ); \n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(SellOrderTable);","import React from 'react';\nimport { Container, Grid, Typography, CircularProgress, Paper, FormControl,  Select, MenuItem} from '@material-ui/core';\nimport {get} from '../utils/Api'\nimport { withStyles } from '@material-ui/core/styles';\nimport HomeChart from '../components/HomeChart'\nimport PortfolioTable from '../components/PortfolioTable'\nimport BuyOrderTable from '../components/BuyOrderTable'\nimport SellOrderTable from '../components/SellOrderTable'\n\nconst styles = {\n\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph_dd: false,\n      graph_type: 'performance_pct',\n      loading:true,\n      g_height: 0 ,\n      g_width: 0 ,\n      last_price_date: null,\n      last_order_date: null,\n      last_portfolio_date: null,\n      last_submited_order_date: null,\n    };\n    this.graphRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    window.addEventListener(\"resize\", this.updateGraph);\n    this.props.retrieve_home()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateGraph);\n  }\n \n  componentDidUpdate() {\n    if (this.state.g_height === 0){\n      this.updateGraph();\n    } \n  }\n\n  updateGraph = () => {\n    if (this.graphRef.current !== null){\n      if (this.state.g_height !== this.graphRef.current.clientHeight) {\n        this.setState({g_height: this.graphRef.current.clientHeight})\n      }\n      if (this.state.g_width !== this.graphRef.current.clientWidth) {\n        this.setState({g_width: this.graphRef.current.clientWidth})\n      }\n    }\n  }\n\n  pie_chart_data = () => {\n    var data = []\n    if (this.props.portfolio_type) {\n      if (this.props.p_real.current_positions !== undefined){\n        for (let i = 0; i < this.props.p_real.current_positions.length; i++) {\n          const value = this.props.p_real.current_positions[i].total_investment\n          const name = `${this.props.p_real.current_positions[i].stock.symbol} | ${this.props.p_real.current_positions[i].stock.name.substring(0,10)}`\n          const item = {'name': name, 'value': value}\n          data.push(item)\n        }\n      }\n    } else {\n      if (this.props.p_demo.current_positions !== undefined){\n        for (let i = 0; i < this.props.p_demo.current_positions.length; i++) {\n          const value = this.props.p_demo.current_positions[i].total_investment\n          const name = `${this.props.p_demo.current_positions[i].stock.symbol} | ${this.props.p_demo.current_positions[i].stock.name.substring(0,10)}`\n          const item = {'name': name, 'value': value}\n          data.push(item)\n        }\n      }\n    }\n    return data\n  }\n\n  area_chart_data = () => {\n    var data = []\n    if (this.props.portfolio_type) {\n      if (this.props.p_real != null && this.props.p_real.portfolio.history !== undefined){\n        for (let i = 0; i < this.props.p_real.portfolio.history.length; i++) { \n          const cash = this.props.p_real.portfolio.history[i].cash\n          const total_invested_value = this.props.p_real.portfolio.history[i].total_invested_value\n          var perf = null\n          var diff = null\n          if (i === 0){\n            const old_balance = this.props.p_real.portfolio.first_portfolio_history.cash + this.props.p_real.portfolio.first_portfolio_history.total_invested_value + this.props.p_real.portfolio.first_portfolio_history.latent_p_l\n            const current_balance = this.props.p_real.portfolio.history[i].cash + this.props.p_real.portfolio.history[i].total_invested_value + this.props.p_real.portfolio.history[i].latent_p_l\n            perf = (current_balance/old_balance-1)*100\n            diff = current_balance - old_balance\n          } else {\n            const old_balance = this.props.p_real.portfolio.history[i-1].cash + this.props.p_real.portfolio.history[i-1].total_invested_value + this.props.p_real.portfolio.history[i-1].latent_p_l\n            const current_balance = this.props.p_real.portfolio.history[i].cash + this.props.p_real.portfolio.history[i].total_invested_value + this.props.p_real.portfolio.history[i].latent_p_l\n            perf = (current_balance/old_balance-1)*100\n            diff = current_balance - old_balance\n          }\n          const name = this.props.p_real.portfolio.history[i].created_at.split('T')[0]\n          const item = {'name': name, 'cash': cash, 'total_invested_value': total_invested_value, 'perf': perf, 'diff':diff}\n          data.push(item)\n        }\n      }\n    } else {\n      if (this.props.p_demo != null &&  this.props.p_demo.portfolio.history !== undefined){\n        for (let i = 0; i < this.props.p_demo.portfolio.history.length; i++) {\n          const cash = this.props.p_demo.portfolio.history[i].cash\n          const total_invested_value = this.props.p_demo.portfolio.history[i].total_invested_value\n          var perf = null\n          var diff = null\n          if (i === 0){\n            const old_balance = this.props.p_demo.portfolio.first_portfolio_history.cash + this.props.p_demo.portfolio.first_portfolio_history.total_invested_value + this.props.p_demo.portfolio.first_portfolio_history.latent_p_l\n            const current_balance = this.props.p_demo.portfolio.history[i].cash + this.props.p_demo.portfolio.history[i].total_invested_value + this.props.p_demo.portfolio.history[i].latent_p_l\n            perf = (current_balance/old_balance-1)*100\n            diff = current_balance - old_balance\n          } else {\n            const old_balance = this.props.p_demo.portfolio.history[i-1].cash + this.props.p_demo.portfolio.history[i-1].total_invested_value + this.props.p_demo.portfolio.history[i-1].latent_p_l\n            const current_balance = this.props.p_demo.portfolio.history[i].cash + this.props.p_demo.portfolio.history[i].total_invested_value + this.props.p_demo.portfolio.history[i].latent_p_l\n            perf = (current_balance/old_balance-1)*100\n            diff = current_balance - old_balance\n          }\n          const name = this.props.p_demo.portfolio.history[i].created_at.split('T')[0]\n          const item = {'name': name, 'cash': cash, 'total_invested_value': total_invested_value, 'perf': perf, 'diff': diff}\n          data.push(item)\n        }\n      }\n    }\n    return data\n  }\n\n  // max_drawdown = () => {\n  //   var lowest_balance = null;\n  //   var init_balance = this.initial_balance()\n  //   if(this.props.portfolio_type) {\n  //     this.props.p_real.p_history.forEach(element => {\n  //       var bal = element['cash'] + element['total_invested_value']\n  //       if (lowest_balance === null || bal < lowest_balance){\n  //         lowest_balance = bal\n  //       }\n  //     });\n  //   } else {\n  //     this.props.p_demo.p_history.forEach(element => {\n  //       var bal = element['cash'] + element['total_invested_value']\n  //       if (lowest_balance === null || bal < lowest_balance){\n  //         lowest_balance = bal\n  //       }\n  //     });\n  //   }\n  //   if (Math.round(lowest_balance - init_balance) === 0){\n  //     return 0\n  //   } else {\n  //     return lowest_balance - init_balance\n  //   }\n  // }\n\n  toggle_graph_dd = () => {\n    this.setState({graph_dd: !this.state.graph_dd})\n  }\n\n  handle_graph_change = (e) => {\n    this.setState({graph_type: e.target.value})\n  }\n\n  render() {\n    if (this.props.loading){\n      return(<Grid container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: '100vh' }}> <CircularProgress color='primary' /></Grid>)\n    } else {\n      var active = null\n      var creation_date = null\n      var last_update = null\n      var currency = null\n      var initial_balance = null\n      var cash = null\n      var total_investment = null\n      var latent_p_l = null\n      var current_balance = null\n      var performance_to_date = null\n      var num_of_days = null\n      var annualized_performance = null \n      if (this.props.portfolio_type){\n        if (this.props.p_real.portfolio != null && this.props.p_real.portfolio.history !== undefined && this.props.p_real.portfolio.history.length !== 0){\n          active = this.props.p_real.portfolio.active ? 'Active' : 'Inactive'\n          creation_date = this.props.p_real.portfolio.created_at.split('T')[0]\n          last_update = new Date(this.props.p_real.portfolio.updated_at).toLocaleString({timeZoneName:'short'})\n          currency = this.props.p_real.portfolio.currency\n          initial_balance = this.props.p_real.portfolio.first_portfolio_history.cash + this.props.p_real.portfolio.first_portfolio_history.total_invested_value + this.props.p_real.portfolio.first_portfolio_history.latent_p_l\n          cash = this.props.p_real.portfolio.last_portfolio_history.cash\n          total_investment = this.props.p_real.portfolio.last_portfolio_history.total_invested_value\n          latent_p_l = this.props.p_real.portfolio.last_portfolio_history.latent_p_l\n          current_balance = cash + total_investment + latent_p_l\n          performance_to_date = current_balance/initial_balance-1\n          num_of_days = (Math.abs(new Date(this.props.p_real.portfolio.first_portfolio_history.created_at) - new Date(this.props.p_real.portfolio.last_portfolio_history.created_at)) / 1000) / 86400 \n          annualized_performance = (1+performance_to_date)**(365/num_of_days)-1\n        } \n      } else {\n        if (this.props.p_demo != null && this.props.p_demo.portfolio.history && this.props.p_demo.portfolio.history.length !== 0){\n          active = this.props.p_demo.portfolio.active ? 'Active' : 'Inactive'\n          creation_date = this.props.p_demo.portfolio.created_at.split('T')[0]\n          last_update = new Date(this.props.p_demo.portfolio.updated_at).toLocaleString({timeZoneName:'short'})\n          currency = this.props.p_demo.portfolio.currency\n          initial_balance = this.props.p_demo.portfolio.first_portfolio_history.cash + this.props.p_demo.portfolio.first_portfolio_history.total_invested_value + this.props.p_demo.portfolio.first_portfolio_history.latent_p_l\n          cash = this.props.p_demo.portfolio.last_portfolio_history.cash\n          total_investment = this.props.p_demo.portfolio.last_portfolio_history.total_invested_value\n          latent_p_l = this.props.p_demo.portfolio.last_portfolio_history.latent_p_l\n          current_balance = cash + total_investment + latent_p_l\n          performance_to_date = current_balance/initial_balance-1\n          num_of_days = (Math.abs(new Date(this.props.p_demo.portfolio.first_portfolio_history.created_at) - new Date(this.props.p_demo.portfolio.last_portfolio_history.created_at)) / 1000) / 86400 \n          annualized_performance = (1+performance_to_date)**(365/num_of_days)-1\n        } \n      }\n\n      return (\n        <Container>\n          <Grid container direction=\"row\" spacing={1}>\n            <Grid item  xs={12} sm={6} >\n              <Paper style={{padding:5, flexGrow: 1}}>\n                <Typography variant='h6'>\n                  Summary\n                </Typography>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Portfolio type: </Typography>\n                  <Typography variant='body1'> {this.props.portfolio_type ? 'REAL' : 'DEMO'} </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Portfolio status: </Typography>\n                  <Typography variant='body1'> {active} </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Creation date: </Typography>\n                  <Typography variant='body1'> {creation_date} </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Last update: </Typography>\n                  <Typography variant='body1'> {last_update} </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Currency: </Typography>\n                  <Typography variant='body1'> {currency} </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Initial balance: </Typography>\n                  <Typography variant='body1'> {initial_balance } </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Cash: </Typography>\n                  <Typography variant='body1'> {cash} </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Investments: </Typography>\n                  <Typography variant='body1'> {total_investment} </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Latent P&L: </Typography>\n                  <Typography variant='body1' style={{color: latent_p_l > 0 ? 'green' : 'red'}}>{latent_p_l} </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Current balance: </Typography>\n                  <Typography variant='body1'> {current_balance} </Typography>\n                </Grid>\n                \n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Return to date: </Typography>\n                  <Typography variant='body1' style={{color: performance_to_date > 0 ? 'green' : 'red'}}> {performance_to_date > 0 && '+'}{(performance_to_date*100).toFixed(2)}% </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Days: </Typography>\n                  <Typography variant='body1'> {num_of_days} </Typography>\n                </Grid>\n                <Grid container justify='space-between'>\n                  <Typography variant='body1'> Annualized return: </Typography>\n                  <Typography variant='body1' style={{color: annualized_performance > 0 ? 'green' : 'red'}}> {(annualized_performance*100).toFixed(2)}%</Typography>\n                </Grid>\n              </Paper>\n            </Grid>\n\n            <Grid item container xs={12} sm={6}  >\n              <Paper style={{padding:5, flexGrow: 1, minHeight:300}} ref={this.graphRef} >\n              <FormControl>\n              \n                <Select\n                  disableUnderline\n                  open={this.state.graph_dd}\n                  onClose={() => {this.toggle_graph_dd()}}\n                  onOpen={() => {this.toggle_graph_dd()}}\n                  value={this.state.graph_type}\n                  onChange={(e) => {this.handle_graph_change(e)}}\n                >\n                  \n                  <MenuItem value='cash'>\n                    <Typography variant='h6'>\n                      Cash\n                    </Typography>\n                  </MenuItem>\n                  \n                  <MenuItem value='investments'>\n                    <Typography variant='h6'>\n                        Investments\n                      </Typography>\n                  </MenuItem>\n                  <MenuItem value='cash_investments'>\n                      <Typography variant='h6'>\n                        Cash/Investments\n                      </Typography>\n                  </MenuItem>\n                  <MenuItem value='performance_pct'>\n                      <Typography variant='h6'>\n                        Performance %\n                      </Typography>\n                  </MenuItem>\n                  <MenuItem value='performance_curr'>\n                      <Typography variant='h6'>\n                        Performance $\n                      </Typography>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n                  <HomeChart\n                    data={this.area_chart_data()}\n                    height={this.state.g_height}\n                    width={this.state.g_width}\n                    graph_type={this.state.graph_type}\n                  />\n              </Paper>\n            </Grid>\n\n            <PortfolioTable \n              {...this.props}\n              portfolio={this.props.portfolio_type ? this.props.p_real : this.props.p_demo}\n              retrieve_history_details={(id) => {this.retrieve_history_details(id)}}\n            />\n\n            <BuyOrderTable \n              {...this.props}\n              portfolio={this.props.portfolio_type ? this.props.p_real : this.props.p_demo}\n            /> \n            \n            <SellOrderTable \n              {...this.props}\n              portfolio={this.props.portfolio_type ? this.props.p_real : this.props.p_demo}\n            /> \n            \n            </Grid>\n        </Container>\n      ); \n    }\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Home);","import React from 'react';\nimport { Container, Typography, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport {get} from '../utils/Api'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass Portfolio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      demo_portfolio: '',\n      current_demo_positions: [],\n      real_portfolio: '',\n      current_real_positions: [],\n    };\n  }\n\n  componentDidMount() {\n    this.retrieve_portfolio()\n  }\n\n  retrieve_portfolio = async () => {\n    get('api/retrieve_portfolio/').then((resp) => {\n      if (resp.status === 200){\n        var response = JSON.parse(resp.response)\n        console.log(response)\n        this.setState({\n          demo_portfolio: response.p_demo.portfolio,\n          current_demo_positions: response.p_demo.current_positions,\n          real_portfolio: response.p_real.portfolio,\n          current_real_positions: response.p_real.current_positions,\n        })\n      }\n    })\n  }\n\n  render() {\n    const positions = this.props.portfolio_type ? this.state.current_real_positions : this.state.current_demo_positions\n    return (\n      <Container>\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n          <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Symbol</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell align=\"right\">Open date</TableCell>\n                  <TableCell align=\"right\">Total investment </TableCell>\n                  <TableCell align=\"right\"># of shares</TableCell>\n                  <TableCell align=\"right\">Unrealized gain/loss $ </TableCell>\n                  <TableCell align=\"right\">Unrealized gain/loss % </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {positions.map((position) => (\n                  <TableRow key={position.id}>\n                    <TableCell component=\"th\" scope=\"row\">{position.stock !== null ? position.stock.symbol : 'Unknown'} </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">{position.stock !== null ? position.stock.name : 'Unknown'} </TableCell>\n                    <TableCell align=\"right\">{position.open_date === null ? 'N.A.' : new Date(position.open_date).toLocaleString({timeZoneName:'short'})}</TableCell>\n                    <TableCell align=\"right\">{position.total_investment.toLocaleString(undefined, {maximumFractionDigits: 0 })}</TableCell>\n                    <TableCell align=\"right\">{position.num_of_shares}</TableCell>\n                    <TableCell align=\"right\" style={{color: position.current_rate - position.open_rate > 0 ? 'green' : 'red'}}> {Math.round(position.current_rate*position.num_of_shares - position.open_rate*position.num_of_shares)} </TableCell>\n                    <TableCell align=\"right\" style={{color: position.current_rate - position.open_rate > 0 ? 'green' : 'red'}}> {((position.current_rate/position.open_rate-1)*100).toFixed(2)+\"%\"} </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Container>\n    ); \n  }\n}\nexport default withStyles(styles, { withTheme: true })(Portfolio);","import React from 'react';\nimport { LineChart, Line, ReferenceLine, CartesianGrid, Legend, XAxis, YAxis, Tooltip } from 'recharts';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass PriceChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n\n    };\n  }\n\n  render() {\n    const { theme, min, max, data } = this.props;\n    return (\n        <LineChart height={this.props.height} width={this.props.width} data={data} >\n            <XAxis dataKey=\"name\" fill={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.common.white : this.props.theme.palette.common.black}/>\n            <YAxis dataKey=\"close\" domain={[Math.round(min*0.9), Math.round(max*1.1)]} fill={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.common.white : this.props.theme.palette.common.black} />\n            <Tooltip />\n            <CartesianGrid/>\n            <Line type=\"monotone\" dataKey=\"close\" stroke={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.primary.light : this.props.theme.palette.primary.dark} strokeWidth={4}/>\n            <Line type=\"monotone\" dataKey={\"high_sma - \" + this.props.high_sma_val} stroke={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.secondary.light : this.props.theme.palette.secondary.dark} strokeWidth={2}/>\n            <Line type=\"monotone\" dataKey={\"low_sma - \" + this.props.low_sma_val} stroke={this.props.theme.palette.type === 'dark' ? this.props.theme.palette.info.light : this.props.theme.palette.info.dark} strokeWidth={2}/>\n            {this.props.open_date !== null && <ReferenceLine x={this.props.open_date.split('T')[0]} stroke=\"green\" label={{ value: 'BOUGHT', fill: 'green' }}/>}\n            {this.props.close_date !== null && <ReferenceLine x={this.props.close_date.split('T')[0]} stroke=\"red\" label={{ value: 'SOLD', fill: 'red' }} />}\n            <Legend />\n        </LineChart>\n    ); \n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(PriceChart);\n","import React from 'react';\nimport { Container, CircularProgress, Grid, Paper, Typography } from '@material-ui/core';\nimport PriceChart from '../components/PriceChart'\nimport {get} from '../utils/Api'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass Position extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        g_height: 0 ,\n        g_width: 0 ,\n        order: undefined,\n        price_df: undefined,\n    };\n    this.graphRef = React.createRef();\n  }\n\n  componentDidMount(){\n    window.addEventListener(\"resize\", this.updateGraph);\n    var order_id = this.props.location.search.split('=')[1]\n    if (order_id !== null){\n        this.retrieve_order_details(order_id)\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateGraph);\n  }\n \n  componentDidUpdate() {\n    if (this.state.g_height === 0){\n      this.updateGraph();\n    } \n  }\n\n  updateGraph = () => {\n    if (this.graphRef.current !== null){\n      if (this.state.g_height !== this.graphRef.current.clientHeight) {\n        this.setState({g_height: this.graphRef.current.clientHeight})\n      }\n      if (this.state.g_width !== this.graphRef.current.clientWidth) {\n        this.setState({g_width: this.graphRef.current.clientWidth})\n      }\n    }\n  }\n\n  retrieve_order_details = (order_id) => {\n    get('api/buy_order_details/?id='+ order_id).then((resp) => {\n        if (resp.status === 200){\n          var response = JSON.parse(resp.response)\n          this.setState({\n              order: response.buy_order,\n              price_df: response.price_df,\n          })\n        }\n      })\n  }\n\n  line_chart_data = () => {\n    var data = []\n    if (this.state.price_df !== undefined){\n        for (let i = 0; i < this.state.price_df.date.length; i++) {\n            const close = this.state.price_df.close[i].toFixed(2)\n            const high_sma = this.state.price_df.high_sma[i].toFixed(2)\n            const low_sma = this.state.price_df.low_sma[i].toFixed(2)\n            const name = this.state.price_df.date[i].split('T')[0]\n            const item = {'name': name, 'close': close, [`high_sma - ${this.state.order.sma_position === undefined ? 'None' : this.state.order.sma_position.model.high_sma}`]: high_sma, [`low_sma - ${this.state.order.sma_position === undefined ? 'None' : this.state.order.sma_position.model.low_sma}`]:low_sma }\n            data.push(item)\n      }\n    }\n    return data\n  }\n\n    price_max = () => {\n        var max = 0\n        if (this.state.price_df !== undefined){\n            var arr = [this.state.price_df.close, this.state.price_df.high_sma, this.state.price_df.low_sma].flat()\n            max = Math.max.apply(null, arr)\n        }\n        return Math.round(max)\n    }\n\n    price_min = () => {\n        var min = 0\n        if (this.state.price_df !== undefined){\n            var arr = [this.state.price_df.close, this.state.price_df.high_sma, this.state.price_df.low_sma].flat()\n            min = Math.min.apply(null, arr)\n        }\n        return Math.round(min)\n    }\n\n\n  render() {\n    if(this.state.order === undefined){\n        return(\n            <Grid container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh' }}> <CircularProgress color='primary' /></Grid>\n        )\n    } else {\n        return (\n            <Container>\n              <Grid container direction=\"column\" spacing={1}>\n                <Grid item container xs={12} sm={12} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                    <Typography variant='h4'>\n                        {this.state.order.stock.symbol} | {this.state.order.stock.name}\n                    </Typography>\n                    <Typography variant='h6'>\n                    </Typography>\n                </Grid>\n                <Grid item container xs={12} sm={12} direction=\"row\" justify=\"center\" spacing={1}>\n                  <Grid item container xs={12} sm={4} >\n                        <Paper style={{flexGrow: 1, padding:5}}>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <Typography variant='body1' style={{fontWeight:'bold'}}>\n                                    Buy order\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                              <Typography variant='body2'>\n                                  price_date\n                              </Typography>\n                              <Typography variant='body2'>\n                                  {this.state.order.sma_position.price_date}\n                              </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                              <Typography variant='body2'>\n                                  created_at\n                              </Typography>\n                              <Typography variant='body2'>\n                                  {this.state.order.created_at === null ? 'None' : new Date(this.state.order.created_at).toLocaleString({formatMatcher:'basic'})}\n                              </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                              <Typography variant='body2'>\n                                  submited_at\n                              </Typography>\n                              <Typography variant='body2'>\n                                  {this.state.order.submited_at === null ? 'None' : new Date(this.state.order.submited_at).toLocaleString({formatMatcher:'basic'})}\n                              </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                              <Typography variant='body2'>\n                                  executed_at\n                              </Typography>\n                              <Typography variant='body2'>\n                                  {this.state.order.executed_at === null ? 'None' : new Date(this.state.order.executed_at).toLocaleString({formatMatcher:'basic'})}\n                              </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                              <Typography variant='body2'>\n                                  canceled_at\n                              </Typography>\n                              <Typography variant='body2'>\n                                  {this.state.order.canceled_at === null ? 'None' : new Date(this.state.order.canceled_at).toLocaleString({formatMatcher:'basic'})}\n                              </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                              <Typography variant='body2'>\n                                  terminated_at\n                              </Typography>\n                              <Typography variant='body2'>\n                                  {this.state.order.terminated_at === null ? 'None' : new Date(this.state.order.terminated_at).toLocaleString({formatMatcher:'basic'})}\n                              </Typography>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item container xs={12} sm={4} >\n                        <Paper style={{flexGrow: 1, padding:5}}>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <Typography variant='body1' style={{fontWeight:'bold'}}>\n                                    Model\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    price_date\n                                </Typography>\n                                <Typography variant='body2'>  \n                                    {this.state.order.sma_position !== undefined && this.state.order.sma_position.price_date}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    SMAs\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.order.sma_position !== undefined && this.state.order.sma_position.model.low_sma} | {this.state.order.sma_position !== undefined && this.state.order.sma_position.model.high_sma} \n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    low_sma value\n                                </Typography>\n                                <Typography variant='body2'>  \n                                    {this.state.order.sma_position !== undefined && this.state.order.sma_position.low_sma.toFixed(2)}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    high_sma value\n                                </Typography>\n                                <Typography variant='body2'>  \n                                    {this.state.order.sma_position !== undefined && this.state.order.sma_position.high_sma.toFixed(2)}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    cagr\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.order.sma_position !== undefined && (this.state.order.sma_position.sma_backtest.model_cagr*100).toFixed(1)}%\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    precision\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.order.sma_position !== undefined && (this.state.order.sma_position.sma_backtest.precision*100).toFixed(1)}%\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    score\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.order.sma_position !== undefined && this.state.order.sma_position.sma_backtest.score.toFixed(2)}\n                                </Typography>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid item container xs={12} sm={12} >\n                    <Paper style={{flexGrow: 1, height: '600px'}} ref={this.graphRef} >\n                        <PriceChart \n                            data={this.line_chart_data()}\n                            max={this.price_max()}\n                            min={this.price_min()}\n                            open_date={this.state.order.sma_position.price_date}\n                            close_date={null}\n                            high_sma_val={this.state.order.sma_position === undefined ? null : this.state.order.sma_position.model.high_sma}\n                            low_sma_val={this.state.order.sma_position === undefined ? null : this.state.order.sma_position.model.low_sma}\n                            height={this.state.g_height}\n                            width={this.state.g_width}\n                            />\n                    </Paper>\n                </Grid>\n              </Grid>\n            </Container>\n          ); \n    }\n  }\n}\nexport default withStyles(styles, { withTheme: true })(Position);","import React from 'react';\nimport { Container, CircularProgress, Grid, Paper, Typography } from '@material-ui/core';\nimport PriceChart from '../components/PriceChart'\nimport {get} from '../utils/Api'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass Position extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        g_height: 0 ,\n        g_width: 0 ,\n        position: undefined,\n        price_df: undefined,\n    };\n    this.graphRef = React.createRef();\n  }\n\n  componentDidMount(){\n    window.addEventListener(\"resize\", this.updateGraph);\n    var pos_id = this.props.location.search.split('=')[1]\n    if (pos_id !== null){\n        this.retrieve_position_details(pos_id)\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateGraph);\n  }\n \n  componentDidUpdate() {\n    if (this.state.g_height === 0){\n      this.updateGraph();\n    } \n  }\n\n  updateGraph = () => {\n    if (this.graphRef.current !== null){\n      if (this.state.g_height !== this.graphRef.current.clientHeight) {\n        this.setState({g_height: this.graphRef.current.clientHeight})\n      }\n      if (this.state.g_width !== this.graphRef.current.clientWidth) {\n        this.setState({g_width: this.graphRef.current.clientWidth})\n      }\n    }\n  }\n\n  retrieve_position_details = (pos_id) => {\n    get('api/position_details/?id='+ pos_id).then((resp) => {\n        if (resp.status === 200){\n          var response = JSON.parse(resp.response)\n          console.log(response)\n          this.setState({\n              position: response.position,\n              price_df: response.price_df,\n          })\n        }\n      })\n  }\n\n  line_chart_data = () => {\n    var data = []\n    if (this.state.price_df !== undefined){\n        for (let i = 0; i < this.state.price_df.date.length; i++) {\n            const close = this.state.price_df.close[i].toFixed(2)\n            const high_sma = this.state.price_df.high_sma[i].toFixed(2)\n            const low_sma = this.state.price_df.low_sma[i].toFixed(2)\n            const name = this.state.price_df.date[i].split('T')[0]\n            const item = {'name': name, 'close': close, [`high_sma - ${this.state.position.sma_position === undefined ? 'None' : this.state.position.sma_position.model.high_sma}`]: high_sma, [`low_sma - ${this.state.position.sma_position === undefined ? 'None' : this.state.position.sma_position.model.low_sma}`]:low_sma }\n            data.push(item)\n      }\n    }\n    return data\n  }\n\n    price_max = () => {\n        var max = 0\n        if (this.state.price_df !== undefined){\n            var arr = [this.state.price_df.close, this.state.price_df.high_sma, this.state.price_df.low_sma].flat()\n            max = Math.max.apply(null, arr)\n        }\n        return Math.round(max)\n    }\n\n    price_min = () => {\n        var min = 0\n        if (this.state.price_df !== undefined){\n            var arr = [this.state.price_df.close, this.state.price_df.high_sma, this.state.price_df.low_sma].flat()\n            min = Math.min.apply(null, arr)\n        }\n        return Math.round(min)\n    }\n\n\n  render() {\n    if(this.state.position === undefined){\n        return(\n            <Grid container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh' }}> <CircularProgress color='primary' /></Grid>\n        )\n    } else {\n        return (\n            <Container>\n              <Grid container direction=\"column\" spacing={1}>\n                <Grid item container xs={12} sm={12} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                    <Typography variant='h4'>\n                        {this.state.position.stock.symbol} | {this.state.position.stock.name}\n                    </Typography>\n                    <Typography variant='h6'>\n                        {this.state.position.open_date !== null && new Date(this.state.position.open_date).toLocaleString({formatMatcher:'basic'})} - {this.state.position.close_date !== null && new Date(this.state.position.close_date).toLocaleString({timeZoneName:'short'})}\n                    </Typography>\n                </Grid>\n                <Grid item container xs={12} sm={12} direction=\"row\" justify=\"center\" spacing={1}>\n                    <Grid item container xs={12} sm={4} >\n                        <Paper style={{flexGrow: 1, padding:5}}>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <Typography variant='body1' style={{fontWeight:'bold'}}>\n                                    Buy order\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    price_date\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.buy_order.length !== 0 && this.state.position.buy_order[0].sma_position.price_date}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    created_at\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.buy_order.length !== 0 &&  new Date(this.state.position.buy_order[0].created_at).toLocaleString({formatMatcher:'basic'})}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    submited_at\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.buy_order.length !== 0 &&  new Date(this.state.position.buy_order[0].submited_at).toLocaleString({formatMatcher:'basic'})}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    executed_at\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.buy_order.length !== 0 &&  new Date(this.state.position.buy_order[0].executed_at).toLocaleString({formatMatcher:'basic'})}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    order_rate\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.buy_order.length !== 0 &&  this.state.position.buy_order[0].order_rate.toFixed(2)}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    num_of_shares\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.buy_order.length !== 0 && this.state.position.buy_order[0].num_of_shares}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    total_investment\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.buy_order.length !== 0 && this.state.position.buy_order[0].total_investment.toFixed(2)}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    stop_loss\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.buy_order.length !== 0 && this.state.position.buy_order[0].stop_loss.toFixed(2)}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    take_profit\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.buy_order.length !== 0 && this.state.position.buy_order[0].take_profit.toFixed(2)}\n                                </Typography>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item container xs={12} sm={4} >\n                        <Paper style={{flexGrow: 1, padding:5}}>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <Typography variant='body1' style={{fontWeight:'bold'}}>\n                                    Model\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    SMAs\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.sma_position !== undefined && this.state.position.sma_position.model.low_sma} | {this.state.position.sma_position !== undefined && this.state.position.sma_position.model.high_sma} \n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    cagr\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.sma_position !== undefined && (this.state.position.sma_position.sma_backtest.model_cagr*100).toFixed(1)}%\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    precision\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.sma_position !== undefined && (this.state.position.sma_position.sma_backtest.precision*100).toFixed(1)}%\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    score\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.sma_position !== undefined && this.state.position.sma_position.sma_backtest.score.toFixed(2)}\n                                </Typography>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item container xs={12} sm={4} >\n                        <Paper style={{flexGrow: 1, padding:5}}>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"center\">\n                                <Typography variant='body1' style={{fontWeight:'bold'}}>\n                                    Sell order\n                                </Typography>\n                            </Grid>\n                            {this.state.position.sell_order.length !== 0 &&\n                            <React.Fragment>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    price_date\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.sell_order[0].sma_position !== null && this.state.position.sell_order[0].sma_position.price_date}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    created_at\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {new Date(this.state.position.sell_order[0].created_at).toLocaleString({formatMatcher:'basic'})}\n                                </Typography>\n                            </Grid>\n                            <Grid item container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Typography variant='body2'>\n                                    executed_at\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {this.state.position.sell_order[0].executed_at === null ? 'None' : new Date(this.state.position.sell_order[0].executed_at).toLocaleString({formatMatcher:'basic'})}\n                                </Typography>\n                            </Grid>\n                            </React.Fragment>\n                            }\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid item container xs={12} sm={12} >\n                    <Paper style={{flexGrow: 1, height: '600px'}} ref={this.graphRef} >\n                        <PriceChart \n                            data={this.line_chart_data()}\n                            max={this.price_max()}\n                            min={this.price_min()}\n                            open_date={this.state.position.open_date}\n                            close_date={this.state.position.close_date}\n                            high_sma_val={this.state.position.sma_position === undefined ? null : this.state.position.sma_position.model.high_sma}\n                            low_sma_val={this.state.position.sma_position === undefined ? null : this.state.position.sma_position.model.low_sma}\n                            height={this.state.g_height}\n                            width={this.state.g_width}\n                            />\n                    </Paper>\n                </Grid>\n              </Grid>\n            </Container>\n          ); \n    }\n  }\n}\nexport default withStyles(styles, { withTheme: true })(Position);","import React from 'react';\nimport { Container, Hidden, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport {get} from '../utils/Api'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass Order extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      orders_demo: [],\n      orders_real: [],\n    };\n  }\n\n  componentDidMount() {\n    this.retrieve_order()\n  }\n\n  retrieve_order = async () => {\n    console.log('retrieve_order')\n    get('api/retrieve_order/').then((resp) => {\n      if (resp.status === 200){\n        var response = JSON.parse(resp.response)\n        console.log(response)\n        this.setState({\n            orders_demo: response.p_demo.orders,\n            orders_real: response.p_real.orders,\n        })\n      }\n    })\n  }\n\n  order_status = (order) => {\n    var buy_order = order.order.order_rate !== undefined\n    var status = {}\n\n    if(buy_order){\n      //BUY ORDER\n      if (order.order.position === null){\n        var canceled = order.order.canceled_at !== null;\n        var terminated = order.order.terminated_at !== null;\n        var submited = order.order.submited_at !== null;\n        var executed = submited && order.order.executed_at !== null;\n        if (!submited){\n          status = {'status': 'PENDING', 'color': 'orange'}\n        }\n        if (!executed){\n          status = {'status': 'PENDING', 'color': 'orange'}\n        }\n        if (executed){\n          status = {'status': 'EXECUTED', 'color': 'green'}\n        }\n        if (canceled){\n          status = {'status': 'CANCELED', 'color': 'orange'}\n        }\n        if (terminated){\n          status = {'status': 'CANCELED', 'color': 'orange'}\n        }\n      } else {\n        var submited = order.order.submited_at !== null;\n        var executed = submited && order.order.executed_at !== null;\n        var in_portfolio = executed && !canceled && !terminated && order.order.position.close_date === null;\n        var closed = order.order.position.close_date !== null;\n        if (!submited){\n          status = {'status': 'PENDING', 'color': 'orange'}\n        }\n        if (!executed){\n          status = {'status': 'PENDING', 'color': 'orange'}\n        }\n        if (executed){\n          status = {'status': 'EXECUTED', 'color': 'green'}\n        }\n        if (closed){\n          status = {'status': 'EXECUTED', 'color': 'green'}\n        }\n      }\n    } else {\n      //SELL order\n      if (order.order.submited_at === null && order.order.executed_at === null){\n        status = {'status': 'PENDING', 'color': 'orange'}\n      }\n      if (order.order.submited_at !== null && order.order.executed_at === null){\n        status = {'status': 'PENDING', 'color': 'orange'}\n      }\n      if (order.order.submited_at !== null && order.order.executed_at !== null){\n        status = {'status': 'EXECUTED', 'color': 'green'}\n      }\n    }\n    if (status === {}){\n      status = {'status': 'ERROR', 'color': 'red'}\n    }\n    return status\n  }\n\n  render() {\n    const orders = this.props.portfolio_type ? this.state.orders_real : this.state.orders_demo;\n    const table_height = 'calc(\"100vh\" - \"100px\")'\n    return (\n        <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\" >\n          <Grid item xs={12} sm={10}>\n            <TableContainer component={Paper} style={{height: 'calc(100vh - 100px)'}}>\n              <Table size='small' stickyHeader aria-label=\"orders table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"right\">Order type</TableCell>\n                    <TableCell>Symbol</TableCell>\n                    <Hidden smDown>\n                      <TableCell>Name</TableCell>\n                    </Hidden>\n                      <TableCell align=\"right\">Total investment </TableCell>\n                    <Hidden smDown>\n                      <TableCell align=\"right\"># of shares</TableCell>\n                      <TableCell align=\"right\">created_at</TableCell>\n                      <TableCell align=\"right\">submited_at</TableCell>\n                      <TableCell align=\"right\">executed_at</TableCell>\n                      <TableCell align=\"right\">canceled_at</TableCell>\n                      <TableCell align=\"right\">terminated_at</TableCell>\n                    </Hidden>\n                    <TableCell align=\"right\">Status</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                  orders.map((order, index)=>{\n                    var status = this.order_status(order)\n                    if(index === 0 || new Date(order.order.created_at).getDay() !== new Date(orders[index-1].order.created_at).getDay()){\n                      return(\n                        <React.Fragment key={order.order.id}>\n                          <TableRow>\n                            <TableCell component=\"th\" scope=\"row\" align='center' colSpan={11} style={{fontWeight:'bold'}}>{order.order.created_at.split('T')[0]} </TableCell>\n                          </TableRow>\n                          <TableRow hover key={order.order.id} onClick={() => {order.position !== null && this.props.history.push('/position/?id='+order.position.id)}} >\n                            <TableCell component=\"th\" scope=\"row\" style={{color: order.order.order_rate === undefined ? 'red' : 'green'}}>{order.order.order_rate === undefined ? 'SELL' : 'BUY'} </TableCell>\n                            <TableCell component=\"th\" scope=\"row\">{order.order.stock.symbol} </TableCell>\n                            <Hidden smDown>\n                              <TableCell component=\"th\" scope=\"row\" style={{display:'block', overflow: 'hidden',  whiteSpace:'nowrap', textOverflow:'ellipsis'}}>{order.order.stock.name} </TableCell>   \n                            </Hidden>          \n                            <TableCell align='right'>{order.order.order_rate === undefined ? order.position.total_investment.toFixed(1) : order.order.total_investment.toFixed(1)} </TableCell>\n                            <Hidden smDown>\n                              <TableCell align='right'>{order.order.order_rate === undefined ? order.position.num_of_shares : order.order.num_of_shares} </TableCell>\n                              <TableCell align='right'>{order.order.created_at === null ? '-' : new Date(order.order.created_at).toLocaleTimeString()} </TableCell>\n                              <TableCell align='right'>{order.order.submited_at === null ? '-' : new Date(order.order.submited_at).toLocaleTimeString()} </TableCell>\n                              <TableCell align='right'>{order.order.executed_at === null ? '-' : new Date(order.order.executed_at).toLocaleTimeString()} </TableCell>\n                              <TableCell align='right'>{order.order.canceled_at === null || order.order.canceled_at === undefined ? '-' : new Date(order.order.canceled_at).toLocaleTimeString()} </TableCell>\n                              <TableCell align='right'>{order.order.terminated_at === null || order.order.terminated_at === undefined ? '-' : new Date(order.order.terminated_at).toLocaleTimeString()} </TableCell>\n                            </Hidden>\n                            <TableCell align='right' style={{color: status['color']}}> {status['status']} </TableCell>\n                          </TableRow>\n                        </React.Fragment>\n                      )\n                    } else {\n                      return(\n                      <TableRow hover key={order.order.id} onClick={() => {order.position !== null && this.props.history.push('/position/?id='+order.position.id)}} >\n                        <TableCell component=\"th\" scope=\"row\" style={{color: order.order.order_rate === undefined ? 'red' : 'green'}}>{order.order.order_rate === undefined ? 'SELL' : 'BUY'} </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">{order.order.stock.symbol} </TableCell>\n                        <Hidden smDown>\n                          <TableCell component=\"th\" scope=\"row\" style={{display:'block', overflow: 'hidden',  whiteSpace:'nowrap', textOverflow:'ellipsis'}}>{order.order.stock.name} </TableCell>   \n                        </Hidden>          \n                        <TableCell align='right'>{order.order.order_rate === undefined ? order.position.total_investment.toFixed(1) : order.order.total_investment.toFixed(1)} </TableCell>\n                        <Hidden smDown>\n                          <TableCell align='right'>{order.order.order_rate === undefined ? order.position.num_of_shares : order.order.num_of_shares} </TableCell>\n                          <TableCell align='right'>{order.order.created_at === null ? '-' : new Date(order.order.created_at).toLocaleTimeString()} </TableCell>\n                          <TableCell align='right'>{order.order.submited_at === null ? '-' : new Date(order.order.submited_at).toLocaleTimeString()} </TableCell>\n                          <TableCell align='right'>{order.order.executed_at === null ? '-' : new Date(order.order.executed_at).toLocaleTimeString()} </TableCell>\n                          <TableCell align='right'>{order.order.canceled_at === null || order.order.canceled_at === undefined ? '-' : new Date(order.order.canceled_at).toLocaleTimeString()} </TableCell>\n                          <TableCell align='right'>{order.order.terminated_at === null || order.order.terminated_at === undefined ? '-' : new Date(order.order.terminated_at).toLocaleTimeString()} </TableCell>\n                        </Hidden>\n                        <TableCell align='right' style={{color: status['color']}}> {status['status']} </TableCell>\n                      </TableRow>\n                      )\n                    }\n                  })}\n                  </TableBody>\n              </Table>\n            </TableContainer>\n            </Grid>\n          </Grid>\n    ); \n  }\n}\nexport default withStyles(styles, { withTheme: true })(Order);","import React from 'react';\nimport { Container, Grid, Table, TableBody, TableCell, TableSortLabel, TableContainer, TableHead, TableRow, Paper, Typography } from '@material-ui/core';\nimport {get} from '../utils/Api'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  \n}\n\nclass Market extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocks:[],\n      predictions: [],\n      sorting_col: 'symbol',\n      sorting_dir: 'desc'\n    }\n  }\n\n  componentDidMount(){\n    console.log(this.props)\n    this.retrieve_market()\n  }\n\n  retrieve_market = async () => {\n    get('api/retrieve_market/').then((resp) => {\n      console.log(resp)\n      if (resp.status === 200){\n        var response = JSON.parse(resp.response)\n        console.log(response)\n        this.setState({'stocks': response.stocks})\n      }\n    })\n  }\n\n  renderStocks = () => {\n    var stocks = this.state.stocks\n    return(\n      stocks.map((stock) => (\n        <TableRow key={stock.symbol}>\n          <TableCell component=\"th\" scope=\"row\"> {stock.symbol}  </TableCell>\n          <TableCell component=\"th\" scope=\"row\" >{stock.name}</TableCell>\n          <TableCell component=\"th\" scope=\"row\">{stock.sector} </TableCell>\n          <TableCell component=\"th\" scope=\"row\">{stock.industry} </TableCell>\n          <TableCell component=\"th\" scope=\"row\" align=\"right\">{stock.last_price === null ? 'None' : stock.last_price.price_date} </TableCell>\n          <TableCell component=\"th\" scope=\"row\" align=\"right\">{stock.last_price === null ? 'None' : Math.round(stock.last_price.close)} </TableCell>\n          <TableCell component=\"th\" scope=\"row\" align=\"right\"> {this.props.portfolio_type ? stock.last_real_pred.prediction === null ? 'None' : stock.last_real_pred.prediction.toFixed(3) : stock.last_demo_pred.prediction === null ? 'None' :  stock.last_demo_pred.prediction.toFixed(3)} </TableCell>\n\n        </TableRow>\n      ))\n    )\n  }\n\n  name_sorter = (col, order) => {\n    if (order === 'asc') {\n        this.state.stocks.sort((a, b) => a.stock[col].localeCompare(b.stock[col]))\n    } else {\n        this.state.stocks.sort((a, b) => b.stock[col].localeCompare(a.stock[col]))\n    }\n  }\n\n  number_sorter = (col, order) => {\n    if (col === 'prediction') {\n      if (this.props.portfolio_type){\n          if (order === 'asc') {\n            this.state.stocks.sort((a,b) => a.last_real_pred.prediction < b.last_real_pred.prediction ? 1 : -1)\n        } else {\n            this.state.stocks.sort((a,b) => a.last_real_pred.prediction > b.last_real_pred.prediction ? 1 : -1)\n        }\n      } else {\n        if (order === 'asc') {\n          this.state.stocks.sort((a,b) => a.last_demo_pred.prediction < b.last_demo_pred.prediction ? 1 : -1)\n      } else {\n          this.state.stocks.sort((a,b) => a.last_demo_pred.prediction > b.last_demo_pred.prediction ? 1 : -1)\n      }\n      }\n    } else {\n        if (order === 'asc') {\n          this.state.stocks.sort((a,b) => a[col] < b[col] ? 1 : -1)\n      } else {\n          this.state.stocks.sort((a,b) => a[col] > b[col] ? 1 : -1)\n      }\n    }\n  }\n\n  p_l_sorter = (col, order) => {\n    if (order === 'asc') {\n        this.state.stocks.sort((a,b) => ((a.current_rate - a.open_rate) * a.num_of_shares) < ((b.current_rate - b.open_rate) * b.num_of_shares) ? 1 : -1)\n    } else {\n        this.state.stocks.sort((a,b) => ((a.current_rate - a.open_rate) * a.num_of_shares) > ((b.current_rate - b.open_rate) * b.num_of_shares) ? 1 : -1)\n    }\n  }\n\n  sorter = (col, order) => {\n    switch (col) {\n        case 'symbol':\n            this.name_sorter(col, order)\n        break;\n        case 'name':\n            this.name_sorter(col, order)\n            break;\n        case 'sector':\n            this.name_sorter(col, order)\n            break;\n        case 'industry':\n            this.number_sorter(col, order)\n            break;\n        case 'price_date':\n            this.number_sorter(col, order)\n            break;\n        case 'close_price':\n          this.number_sorter(col, order)\n          break;\n        case 'prediction':\n            this.number_sorter(col, order)\n            break;\n        default:\n            console.log('Unknown col');\n    }\n  }\n\n\n  handleSorting = (e) => {\n    if (this.state.sorting_dir === 'asc') {\n      this.sorter(e.currentTarget.id, 'desc')\n      this.setState({sorting_col: e.currentTarget.id, sorting_dir:'desc'})\n    } else {\n      this.sorter(e.currentTarget.id, 'asc')\n      this.setState({sorting_col: e.currentTarget.id, sorting_dir:'asc'})\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n      <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n        <Typography variant='h6' style={{margin:10}}>\n          Investment universe: {this.state.stocks.length} stocks\n        </Typography>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\" style={{tableLayout:'fixed', width:'100%'}}>\n              <TableHead>\n                <TableRow>\n                  <TableCell> <Typography variant='body2'>Symbol</Typography>\n                    <TableSortLabel active={this.state.sorting_col==='symbol'} direction={this.state.sorting_dir} id='symbol' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell > <Typography variant='body2'>Name</Typography>\n                    <TableSortLabel active={this.state.sorting_col==='name'} direction={this.state.sorting_dir} id='name' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell ><Typography variant='body2'>Sector</Typography>\n                    <TableSortLabel active={this.state.sorting_col==='sector'} direction={this.state.sorting_dir} id='sector' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell ><Typography variant='body2'>Industry</Typography>\n                    <TableSortLabel active={this.state.sorting_col==='industry'} direction={this.state.sorting_dir} id='industry' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell align=\"right\" ><Typography variant='body2'>Price date</Typography> \n                    <TableSortLabel active={this.state.sorting_col==='price_date'} direction={this.state.sorting_dir} id='price_date' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell align=\"right\" ><Typography variant='body2'>Closing price</Typography>\n                    <TableSortLabel active={this.state.sorting_col==='close_price'} direction={this.state.sorting_dir} id='close_price' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell align=\"right\" ><Typography variant='body2'>{this.props.portfolio_type ? this.props.p_real.portfolio.neural_network.nn_name : this.props.p_demo.portfolio.neural_network.nn_name} prediction</Typography>\n                    <TableSortLabel active={this.state.sorting_col==='prediction'} direction={this.state.sorting_dir} id='prediction' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.renderStocks()}\n              </TableBody>\n            </Table>\n          </TableContainer>\n      </Grid>\n      </Container>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Market);\n","import React from 'react';\nimport { Container, Grid, Typography, Table, TableBody, TableCell, TableSortLabel, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport {get} from '../utils/Api'\n\nclass Model extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sma_backtests:[],\n      sorting_col: 'symbol',\n      sorting_dir: 'desc'\n    }\n  }\n\n  componentDidMount(){\n    this.retrieve_model()\n  }\n\n  retrieve_model = async () => {\n    get('api/retrieve_model/').then((resp) => {\n      if (resp.status === 200){\n        var response = JSON.parse(resp.response)\n        console.log(response)\n        this.setState({'sma_backtests': response.sma_backtest})\n      }\n    })\n  }\n\n  render_Sma_backtests = () => {\n    var sma_backtests = this.state.sma_backtests\n    return(\n        sma_backtests.map((sma_backtest) => (\n        <TableRow key={sma_backtest.id}>\n          <TableCell component=\"th\" scope=\"row\">{sma_backtest.stock.symbol} </TableCell>\n          <TableCell align=\"right\" >{sma_backtest.model.high_sma} / {sma_backtest.model.low_sma} </TableCell>\n          <TableCell align=\"right\" >{parseFloat(sma_backtest.model_cagr*100).toFixed(2)+\"%\"}</TableCell>\n          <TableCell align=\"right\" >{parseFloat(sma_backtest.precision*100).toFixed(2)+\"%\"}</TableCell>\n          <TableCell align=\"right\" >{Math.round(sma_backtest.score)}</TableCell>\n          {sma_backtest.sma_position === undefined ?\n          <React.Fragment>\n            <TableCell align=\"right\" style={{color: 'red'}} >None</TableCell>\n            <TableCell align=\"right\" style={{color: 'red'}} >None</TableCell>\n          </React.Fragment>\n            :\n            <React.Fragment>\n            <TableCell align=\"right\" >{sma_backtest.sma_position.length === 0 ? 'None' : sma_backtest.sma_position[0].price_date}</TableCell>\n            <TableCell align=\"right\" style={{color: sma_backtest.sma_position.length === 0 ? 'black' : sma_backtest.sma_position[0].buy ? 'green' : 'red'}} >{sma_backtest.sma_position.length === 0 ? 'None' : sma_backtest.sma_position[0].buy ? 'BUY' : 'SELL'}</TableCell>\n            </React.Fragment>\n          }\n        </TableRow>\n      ))\n    )\n  }\n\n  sorter = (col, order) => {\n\n    if (order === 'asc') {\n        this.state.sma_backtests.sort(function(a, b) { return a[col] > b[col] ? 1 : -1 } )\n      } else {\n        this.state.sma_backtests.sort(function(a, b) { return b[col] > a[col] ? 1 : -1 } )\n      }\n  }\n\n  handleSorting = (e) => {\n    if (this.state.sorting_dir === 'asc') {\n      this.sorter(e.currentTarget.id, 'desc')\n      this.setState({sorting_col: e.currentTarget.id, sorting_dir:'desc'})\n    } else {\n      this.sorter(e.currentTarget.id, 'asc')\n      this.setState({sorting_col: e.currentTarget.id, sorting_dir:'asc'})\n    }\n  }\n\n  update_sma_positions = async () => {\n    get('api/update_sma_positions/').then((resp) => {\n        console.log(resp)\n    })\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n        <Typography variant=\"h4\" style={{margin:5}}>\n            Models\n          </Typography>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell style={{fontWeight:'bold'}}>Symbol\n                    <TableSortLabel active={this.state.sorting_col==='symbol'} direction={this.state.sorting_dir} id='symbol' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell align=\"right\"  style={{fontWeight:'bold'}}>Model\n                    <TableSortLabel active={this.state.sorting_col==='model'} direction={this.state.sorting_dir} id='model' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell align=\"right\"  style={{fontWeight:'bold'}}>CAGR\n                    <TableSortLabel active={this.state.sorting_col==='model_cagr'} direction={this.state.sorting_dir} id='model_cagr' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell align=\"right\"  style={{fontWeight:'bold'}}>Precision\n                    <TableSortLabel active={this.state.sorting_col==='precision'} direction={this.state.sorting_dir} id='precision' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell align=\"right\" style={{fontWeight:'bold'}}>Score\n                    <TableSortLabel active={this.state.sorting_col==='score'} direction={this.state.sorting_dir} id='score' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell align=\"right\" style={{fontWeight:'bold'}}>Position date\n                    <TableSortLabel active={this.state.sorting_col==='sma_position_date'} direction={this.state.sorting_dir} id='sma_position_date' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                  <TableCell align=\"right\" style={{fontWeight:'bold'}}>SMA Position\n                    <TableSortLabel active={this.state.sorting_col==='sma_position'} direction={this.state.sorting_dir} id='sma_position' onClick={e => {this.handleSorting(e)}} />\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.render_Sma_backtests()}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          </Grid>\n        </Container>\n    )\n  }\n}\n\nexport default Model","import React from 'react';\nimport { Collapse, Box, Container, Typography, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport IconButton from '@material-ui/core/IconButton';\nimport {get} from '../utils/Api'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        open_id: null,\n        history_demo: [],\n        history_real: [],\n    };\n  }\n\n  componentDidMount() {\n    this.retrieve_history()\n  }\n\n  retrieve_history = async () => {\n    console.log('retrieve_history')\n    get('api/retrieve_history/').then((resp) => {\n      if (resp.status === 200){\n        var response = JSON.parse(resp.response)\n        console.log(response)\n        this.setState({\n            history_demo: response.p_demo.history,\n            history_real: response.p_real.history,\n        })\n      }\n    })\n  }\n\n  retrieve_history_details = async (id) => {\n    console.log('retrieve_history_details')\n    get('api/retrieve_history_details/?id='+id).then((resp) => {\n      if (resp.status === 200){\n        var response = JSON.parse(resp.response)\n        console.log(response)\n        // this.setState({\n        //     history_demo: response.p_demo.history,\n        //     history_real: response.p_real.history,\n        // })\n      }\n    })\n  }\n\n  holding_duration = (open_date, close_date) => {\n    var delta = Math.abs(new Date(open_date) - new Date(close_date)) / 1000;\n    // calculate (and subtract) whole days\n    var days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n    // calculate (and subtract) whole hours\n    var hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600;\n    \n    if (days < 1){\n      return `${(hours/24).toLocaleString(undefined, {maximumFractionDigits: 2})} day` \n    } else {\n      return `${days},${(hours/24).toLocaleString(undefined, {maximumFractionDigits: 0})} day(s)` \n    }\n  }\n\n  handle_open = async (id) => {\n    if (id === this.state.open_id){\n      this.setState({open_id: null})\n    } else {\n      this.setState({open_id: id})\n      this.retrieve_history_details(id)\n    }\n  }\n\n  renderHistory(){\n    if(this.props.portfolio_type) {\n      var history_real = this.state.history_real\n      return(\n        <TableContainer component={Paper} style={{ overflow: 'auto'}} >\n          <Table size=\"small\" stickyHeader aria-label=\"sticky table\" >\n          <TableHead>\n            <TableRow>\n              <TableCell>Name\n              </TableCell>\n              <TableCell>Sector\n              </TableCell>\n              <TableCell align=\"right\">Open date \n              </TableCell>\n              <TableCell align=\"right\">Close date\n              </TableCell>\n              <TableCell align=\"right\">Duration\n              </TableCell>\n              <TableCell align=\"right\">Open rate \n              </TableCell>\n              <TableCell align=\"right\">Close rate\n              </TableCell>\n              <TableCell align=\"right\">P/L</TableCell>\n              </TableRow>\n          </TableHead>\n          <TableBody>\n            {history_real.map((hi) => (\n              <TableRow key={hi.id}>\n                <TableCell>\n                  <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => this.handle_open(hi.id)}>\n                    {this.state.open_id === hi.id ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                  </IconButton>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">{hi.stock.name} </TableCell>\n                <TableCell component=\"th\" scope=\"row\">{hi.stock.sector} </TableCell>\n                <TableCell align=\"right\"> {new Date(hi.open_date).toLocaleString({timeZoneName:'short'})} </TableCell>\n                <TableCell align=\"right\"> {new Date(hi.close_date).toLocaleString({timeZoneName:'short'})} </TableCell>\n                <TableCell align=\"right\"> {this.holding_duration(hi.open_date, hi.close_date)} </TableCell>\n                <TableCell align=\"right\"> {hi.open_rate.toLocaleString(undefined, {maximumFractionDigits: 2 })} </TableCell>\n                <TableCell align=\"right\"> {hi.close_rate.toLocaleString(undefined, {maximumFractionDigits: 2 })} </TableCell>\n                <TableCell align=\"right\" style={{color: hi.close_rate > hi.open_rate ? 'green' : 'red'}} > \n                   {((hi.close_rate/hi.open_rate-1)*100).toFixed(2)}%\n                </TableCell>\n              </TableRow>\n            ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )\n    } else {\n      var history_demo = this.state.history_demo\n      return(\n        <TableContainer component={Paper} style={{ overflow: 'auto'}} >\n          <Table size=\"small\" stickyHeader aria-label=\"sticky table\" >\n          <TableHead>\n            <TableRow>\n              <TableCell>Name </TableCell>\n              <TableCell>Sector </TableCell>\n              <TableCell align=\"right\">created_at </TableCell>\n              <TableCell align=\"right\">Open date </TableCell>\n              <TableCell align=\"right\">Close date</TableCell>\n              <TableCell align=\"right\">Duration</TableCell>\n              <TableCell align=\"right\">Open rate </TableCell>\n              <TableCell align=\"right\">Close rate</TableCell>\n              <TableCell align=\"right\">P/L $</TableCell>\n              <TableCell align=\"right\">P/L %</TableCell>\n              </TableRow>\n          </TableHead>\n          <TableBody>\n            {history_demo.map((hi) => (\n              <TableRow hover key={hi.id} onClick={() => {this.props.history.push('/position/?id='+hi.id)}} >\n                <TableCell component=\"th\" scope=\"row\">{hi.stock.name} </TableCell>\n                <TableCell component=\"th\" scope=\"row\">{hi.stock.sector} </TableCell>\n                <TableCell align=\"right\"> {new Date(hi.created_at).toLocaleString({timeZoneName:'short'})} </TableCell>\n                <TableCell align=\"right\"> {new Date(hi.open_date).toLocaleString({timeZoneName:'short'})} </TableCell>\n                <TableCell align=\"right\"> {new Date(hi.close_date).toLocaleString({timeZoneName:'short'})} </TableCell>\n                <TableCell align=\"right\"> {this.holding_duration(hi.open_date, hi.close_date)} </TableCell>\n                <TableCell align=\"right\"> {hi.open_rate.toLocaleString(undefined, {maximumFractionDigits: 2 })} </TableCell>\n                <TableCell align=\"right\"> {hi.close_rate.toLocaleString(undefined, {maximumFractionDigits: 2 })} </TableCell>\n                <TableCell align=\"right\" style={{color: hi.close_rate > hi.open_rate ? 'green' : 'red'}} > \n                   {((hi.close_rate-hi.open_rate)*hi.num_of_shares).toFixed(1)}\n                </TableCell>\n                <TableCell align=\"right\" style={{color: hi.close_rate > hi.open_rate ? 'green' : 'red'}} > \n                   {((hi.close_rate/hi.open_rate-1)*100).toFixed(2)}%\n                </TableCell>\n              </TableRow>\n            ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )\n    }\n  }\n\n\n  render() {\n    const old_positions = this.props.portfolio_type ? this.state.history_real : this.state.history_demo\n    return (\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\" >\n        <Grid item xs={12} sm={10}>\n        <TableContainer component={Paper} style={{ overflow: 'auto'}} >\n          <Table size=\"small\" stickyHeader aria-label=\"sticky table\" >\n          <TableHead>\n            <TableRow>\n            <TableCell>Ticker </TableCell>\n              <TableCell>Name </TableCell>\n              <TableCell>Sector </TableCell>\n              <TableCell align=\"right\">created_at </TableCell>\n              <TableCell align=\"right\">Open date </TableCell>\n              <TableCell align=\"right\">Close date</TableCell>\n              <TableCell align=\"right\">Duration</TableCell>\n              <TableCell align=\"right\">Total investment</TableCell>\n              <TableCell align=\"right\">Open rate </TableCell>\n              <TableCell align=\"right\">Close rate</TableCell>\n              <TableCell align=\"right\">P/L $</TableCell>\n              <TableCell align=\"right\">P/L %</TableCell>\n              </TableRow>\n          </TableHead>\n          <TableBody>\n            {old_positions.map((hi) => (\n              <TableRow hover key={hi.id} onClick={() => {this.props.history.push('/position/?id='+hi.id)}} >\n                <TableCell component=\"th\" scope=\"row\">{hi.stock.symbol} </TableCell>\n                <TableCell component=\"th\" scope=\"row\">{hi.stock.name} </TableCell>\n                <TableCell component=\"th\" scope=\"row\">{hi.stock.sector} </TableCell>\n                <TableCell align=\"right\"> {new Date(hi.created_at).toLocaleString({timeZoneName:'short'})} </TableCell>\n                <TableCell align=\"right\"> {new Date(hi.open_date).toLocaleString({timeZoneName:'short'})} </TableCell>\n                <TableCell align=\"right\"> {new Date(hi.close_date).toLocaleString({timeZoneName:'short'})} </TableCell>\n                <TableCell align=\"right\"> {this.holding_duration(hi.open_date, hi.close_date)} </TableCell>\n                <TableCell align=\"right\"> {hi.total_investment.toFixed(1)} </TableCell>\n                <TableCell align=\"right\"> {hi.open_rate.toLocaleString(undefined, {maximumFractionDigits: 2 })} </TableCell>\n                <TableCell align=\"right\"> {hi.close_rate.toLocaleString(undefined, {maximumFractionDigits: 2 })} </TableCell>\n                <TableCell align=\"right\" style={{color: hi.close_rate > hi.open_rate ? 'green' : 'red'}} > \n                   {((hi.close_rate-hi.open_rate)*hi.num_of_shares).toFixed(1)}\n                </TableCell>\n                <TableCell align=\"right\" style={{color: hi.close_rate > hi.open_rate ? 'green' : 'red'}} > \n                   {((hi.close_rate/hi.open_rate-1)*100).toFixed(2)}%\n                </TableCell>\n              </TableRow>\n            ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        </Grid>\n      </Grid>\n    ); \n  }\n}\nexport default withStyles(styles, { withTheme: true })(History);","import React from 'react';\nimport { TextField, Grid, Button, Typography } from '@material-ui/core';\n\n\nclass Auth extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            sign_up: false,\n        };\n      }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n  render() {\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh' }}\n        >   \n            <Grid item xs={10} style={{margin:10}}>\n                <Typography style={{'color':'red'}}>\n                    {this.props.errors.non_field_errors}\n                </Typography>\n            </Grid>\n            \n            <Grid item xs={10} style={{margin:10}}>\n                <TextField\n                    onChange={e => {this.handleChange(e);}}\n                    name=\"username\"\n                    variant=\"outlined\"\n                    fullWidth\n                    required\n                    id=\"Name\"\n                    label=\"Name\"\n                    autoFocus\n                    error={this.props.errors.username !== undefined}\n                    helperText={this.props.errors.username}\n                />\n            </Grid>\n            {this.state.sign_up && \n                <Grid item xs={10} style={{margin:10}}>\n                    <TextField\n                        onChange={e => {this.handleChange(e);}}\n                        name=\"email\"\n                        variant=\"outlined\"\n                        fullWidth\n                        required\n                        id=\"email\"\n                        label=\"Email\"\n                        error={this.props.errors.email !== undefined}\n                        helperText={this.props.errors.email}\n                    />\n                </Grid>\n            }\n            <Grid item xs={10} style={{margin:10}}>\n                <TextField\n                    onChange={e => {this.handleChange(e);}}\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    error={this.props.errors.password !== undefined}\n                    helperText={this.props.errors.password}\n                />\n            </Grid> \n            <Grid item xs={10} style={{margin:10}}>\n                {this.state.sign_up &&\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {this.props.sign_up(this.state)}}\n                >\n                    Sign up\n                </Button>\n                }\n                {!this.state.sign_up &&\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {this.props.log_in(this.state)}}\n                >\n                    Log in\n                </Button>\n                }\n            </Grid>\n            <Grid item xs={10} style={{margin:10}}>\n                <Typography color='inherit' style={{cursor: 'pointer'}} onClick={()=>{this.setState({sign_up: !this.state.sign_up})}}>\n                    {!this.state.sign_up && 'Sign up'}\n                    {this.state.sign_up && 'Log in'}\n                </Typography>\n            </Grid>\n        </Grid>\n    ); \n  }\n}\n\nexport default Auth","import React from 'react';\nimport { TextField, Grid, Button, Divider, Typography, Switch, Select, MenuItem } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = {\n\n}\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n      }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value});\n    }\n\n    render() {\n        return (\n        <Grid\n            container\n            direction='column'\n            alignItems='center'\n        >   \n            <Grid container item xs={10} sm={4} md={4} lg={4} xl={4} style={{margin:10}}>\n                <TextField\n                    onChange={e => {this.handleChange(e);}}\n                    defaultValue={this.props.user.username}\n                    name=\"username\"\n                    variant=\"outlined\"\n                    fullWidth\n                    required\n                    id=\"Name\"\n                    label=\"Name\"\n                    error={this.props.errors.username !== undefined}\n                    helperText={this.props.errors.username}\n                />\n            </Grid>\n            <Grid container item xs={10} sm={4} md={4} lg={4} xl={4} style={{margin:10}}>\n                <TextField\n                    onChange={e => {this.handleChange(e);}}\n                    defaultValue={this.props.user.email}\n                    name=\"email\"\n                    variant=\"outlined\"\n                    fullWidth\n                    required\n                    id=\"Email\"\n                    label=\"Email\"\n                    error={this.props.errors.email !== undefined}\n                    helperText={this.props.errors.email}\n                />\n            </Grid>\n            <Grid container item xs={10} sm={4} md={4} lg={4} xl={4} style={{margin:10}}>\n                <TextField\n                    onChange={e => {this.handleChange(e);}}\n                    defaultValue=''\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    error={this.props.errors.password !== undefined}\n                    helperText={this.props.errors.password}\n                />\n            </Grid>\n            <Grid container item xs={10} sm={4} md={4} lg={4} xl={4} style={{margin:10}}>\n                <TextField\n                    onChange={e => {this.handleChange(e);}}\n                    defaultValue={this.props.user.broker_username}\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"broker_username\"\n                    label=\"Broker username\"\n                    type=\"broker_username\"\n                    id=\"broker_username\"\n                    error={this.props.errors.broker_username !== undefined}\n                    helperText={this.props.errors.broker_username}\n                />\n            </Grid>\n            <Grid container item xs={10} sm={4} md={4} lg={4} xl={4} style={{margin:10}}>\n                <TextField\n                    onChange={e => {this.handleChange(e);}}\n                    defaultValue={this.props.user.broker_password}\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"broker_password\"\n                    label=\"Broker password\"\n                    type=\"password\"\n                    id=\"broker_password\"\n                    error={this.props.errors.broker_password !== undefined}\n                    helperText={this.props.errors.broker_password}\n                />\n            </Grid>\n            {this.props.p_demo.portfolio.created_at !== null && \n            <Grid container item direction=\"column\" align='center' justify='center'  xs={10} sm={4} md={4} lg={4} xl={4} style={{margin:10}}>\n                <Typography variant='body1'>\n                    Demo account\n                </Typography>\n                <Grid container alignItems='center' justify='space-between' item style={{marginVertical:5}} >\n                    <Typography variant='body1'>\n                        {this.props.p_demo.portfolio.active ? 'Active' : 'Inactive'}\n                    </Typography>\n                    <Switch\n                        name='demo_active'\n                        checked={this.props.p_demo.portfolio.active === true}\n                        onChange={() => {this.props.update_portfolio({'active': this.props.p_demo.portfolio.active === true ? 'False' : 'True', 'portfolio_type': 'False'})}}\n                    />\n                </Grid>\n                <Grid container alignItems='center' justify='space-between' item style={{marginVertical:5}}>\n                    <Typography variant='body1'>\n                        Neural network\n                    </Typography>\n                    <Typography variant='body1'>\n                        {this.props.p_demo.portfolio.neural_network.nn_name}\n                    </Typography>\n                </Grid>\n                <Grid container alignItems='center' justify='space-between' item style={{marginVertical:5}}>\n                    <Typography variant='body1'>\n                        Stop loss\n                    </Typography>\n                    <Select\n                        labelId=\"stop_loss_select_demo\"\n                        id=\"stop_loss_select_demo\"\n                        value={this.props.p_demo.portfolio.stop_loss === null ? 'None' : this.props.p_demo.portfolio.stop_loss}\n                        onChange={(event) => {this.props.update_portfolio({'stop_loss': event.target.value === 'None' ? null : event.target.value, 'portfolio_type': 'False'})}}\n                    >   \n                        <MenuItem value={'None'}>None</MenuItem>\n                        <MenuItem value={0.01}>1%</MenuItem>\n                        <MenuItem value={0.025}>2,5%</MenuItem>\n                        <MenuItem value={0.05}>5%</MenuItem>\n                        <MenuItem value={0.10}>10%</MenuItem>\n                        <MenuItem value={0.15}>15%</MenuItem>\n                        <MenuItem value={0.20}>20%</MenuItem>\n                    </Select>\n                </Grid>\n                <Grid container alignItems='center' justify='space-between' item style={{marginVertical:5}}>\n                    <Typography variant='body1'>\n                        Take profit\n                    </Typography>\n                    <Select\n                        labelId=\"take_profit_select_demo\"\n                        id=\"take_profit_select_demo\"\n                        value={this.props.p_demo.portfolio.take_profit === null ? 'None' : this.props.p_demo.portfolio.take_profit}\n                        onChange={(event) => {this.props.update_portfolio({'take_profit': event.target.value === 'None' ? null : event.target.value, 'portfolio_type': 'False'})}}\n                    >   \n                        <MenuItem value={'None'}>None</MenuItem>\n                        <MenuItem value={0.10}>10%</MenuItem>\n                        <MenuItem value={0.15}>15%</MenuItem>\n                        <MenuItem value={0.20}>20%</MenuItem>\n                        <MenuItem value={0.30}>30%</MenuItem>\n                        <MenuItem value={0.40}>40%</MenuItem>\n                        <MenuItem value={0.50}>50%</MenuItem>\n                        <MenuItem value={1}>100%</MenuItem>\n                    </Select>\n                </Grid>\n                <Grid container alignItems='center' justify='space-between' item style={{marginVertical:5}}>\n                    <Typography variant='body1'>\n                        Position size (% of total asset)\n                    </Typography>\n                    <Select\n                        labelId=\"pos_size_select_demo\"\n                        id=\"pos_size_select_demo\"\n                        value={this.props.p_demo.portfolio.pos_size === null ? 'None' : this.props.p_demo.portfolio.pos_size}\n                        onChange={(event) => {this.props.update_portfolio({'pos_size':  event.target.value, 'portfolio_type': 'False'})}}\n                    >   \n                        <MenuItem value={0.01}>1%</MenuItem>\n                        <MenuItem value={0.05}>5%</MenuItem>\n                        <MenuItem value={0.10}>10%</MenuItem>\n                        <MenuItem value={0.15}>15%</MenuItem>\n                        <MenuItem value={0.20}>20%</MenuItem>\n                        <MenuItem value={0.30}>30%</MenuItem>\n                    </Select>\n                </Grid>\n            </Grid>\n            }\n            <Grid container item direction=\"column\" align='center' justify='center'  xs={10} sm={4} md={4} lg={4} xl={4} style={{margin:10}}>\n                <Divider style={{margin: 10}}/>\n            </Grid>\n            {this.props.p_real.portfolio.created_at !== null && \n            <Grid container item direction=\"column\" align='center' justify='center'  xs={10} sm={4} md={4} lg={4} xl={4} style={{margin:10}}>\n                <Typography variant='body1'>\n                    Real account\n                </Typography>\n                <Grid container alignItems='center' justify='space-between' item style={{marginVertical:5}} >\n                    <Typography variant='body1'>\n                        {this.props.p_real.portfolio.active ? 'Active' : 'Inactive'}\n                    </Typography>\n                    <Switch\n                        name='demo_active'\n                        checked={this.props.p_real.portfolio.active === true}\n                        onChange={() => {this.props.update_portfolio({'active': this.props.p_real.portfolio.active === true ? 'False' : 'True', 'portfolio_type': 'True'})}}\n                    />\n                </Grid>\n                <Grid container alignItems='center' justify='space-between' item style={{marginVertical:5}}>\n                    <Typography variant='body1'>\n                        Neural network\n                    </Typography>\n                    <Typography variant='body1'>\n                        {this.props.p_real.portfolio.neural_network.nn_name}\n                    </Typography>\n                </Grid>\n                <Grid container alignItems='center' justify='space-between' item style={{marginVertical:5}}>\n                    <Typography variant='body1'>\n                        Stop loss\n                    </Typography>\n                    <Select\n                        labelId=\"stop_loss_select_demo\"\n                        id=\"stop_loss_select_demo\"\n                        value={this.props.p_real.portfolio.stop_loss === null ? 'None' : this.props.p_real.portfolio.stop_loss}\n                        onChange={(event) => {this.props.update_portfolio({'stop_loss': event.target.value === 'None' ? null : event.target.value, 'portfolio_type': 'True'})}}\n                    >\n                        <MenuItem value={'None'}>None</MenuItem>\n                        <MenuItem value={0.01}>1%</MenuItem>\n                        <MenuItem value={0.025}>2,5%</MenuItem>\n                        <MenuItem value={0.05}>5%</MenuItem>\n                        <MenuItem value={0.10}>10%</MenuItem>\n                        <MenuItem value={0.15}>15%</MenuItem>\n                        <MenuItem value={0.20}>20%</MenuItem>\n                    </Select>\n                </Grid>\n                <Grid container alignItems='center' justify='space-between' item style={{marginVertical:5}}>\n                    <Typography variant='body1'>\n                        Take profit\n                    </Typography>\n                    <Select\n                        labelId=\"take_profit_select_demo\"\n                        id=\"take_profit_select_demo\"\n                        value={this.props.p_real.portfolio.take_profit === null ? 'None' : this.props.p_real.portfolio.take_profit}\n                        onChange={(event) => {this.props.update_portfolio({'take_profit': event.target.value === 'None' ? null : event.target.value, 'portfolio_type': 'True'})}}\n                    >   \n                        <MenuItem value={'None'}>None</MenuItem>\n                        <MenuItem value={0.10}>10%</MenuItem>\n                        <MenuItem value={0.15}>15%</MenuItem>\n                        <MenuItem value={0.20}>20%</MenuItem>\n                        <MenuItem value={0.30}>30%</MenuItem>\n                        <MenuItem value={0.40}>40%</MenuItem>\n                        <MenuItem value={0.50}>50%</MenuItem>\n                        <MenuItem value={1}>100%</MenuItem>\n                    </Select>\n                </Grid>\n                <Grid container alignItems='center' justify='space-between' item style={{marginVertical:5}}>\n                    <Typography variant='body1'>\n                        Position size (% of total asset)\n                    </Typography>\n                    <Select\n                        labelId=\"pos_size_select_demo\"\n                        id=\"pos_size_select_demo\"\n                        value={this.props.p_real.portfolio.pos_size === null ? 'None' : this.props.p_real.portfolio.pos_size}\n                        onChange={(event) => {this.props.update_portfolio({'pos_size':  event.target.value, 'portfolio_type': 'False'})}}\n                    >   \n                        <MenuItem value={0.01}>1%</MenuItem>\n                        <MenuItem value={0.05}>5%</MenuItem>\n                        <MenuItem value={0.10}>10%</MenuItem>\n                        <MenuItem value={0.15}>15%</MenuItem>\n                        <MenuItem value={0.20}>20%</MenuItem>\n                        <MenuItem value={0.30}>30%</MenuItem>\n                    </Select>\n                </Grid>\n            </Grid>\n            }\n            <Grid item xs={10} style={{margin:10}}>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {this.props.update_user(this.state)}}\n                >\n                Update account\n                </Button>\n                <Divider style={{margin: 10}}/>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={() => {this.props.logout()}}\n                >\n                    Logout\n                </Button>\n            </Grid>\n        </Grid>\n    ); \n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Profile);","import React from 'react';\nimport {AppBar, Container, Toolbar, Link, Typography, IconButton, Hidden, SwipeableDrawer, Box, List, ListItem, ListItemText, Switch} from '@material-ui/core/';\nimport {AccountCircle} from '@material-ui/icons';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  drawer_list: {\n    width: 250,\n  },\n  appBar_list: {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: 0,\n  }\n};\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      drawer_open: false\n    };\n  }\n\n  toggle_drawer = () => {\n    this.setState({drawer_open: !this.state.drawer_open})\n  }\n\n  drawer = () => {\n    return(\n      <SwipeableDrawer\n        anchor='left'\n        open={this.state.drawer_open}\n        onClose={() => {this.toggle_drawer()}}\n        onOpen={() => {this.toggle_drawer()}}\n      >\n        <Typography >\n          <Link href=\"/\" style={{'padding': 10}}>Home</Link>\n          <Link href=\"/portfolio\" style={{'padding': 10}}>Portfolio</Link>\n          <Link href=\"/market\" style={{'padding': 10}}>Market</Link>\n          <Link href=\"/model\" style={{'padding': 10}}>Model</Link>\n        </Typography>\n      </SwipeableDrawer>\n    )\n  }\n\n  render() {\n    const { classes, theme } = this.props;\n    return (\n        <AppBar position=\"static\" style={{marginBottom:20}}>\n          <Container>\n            <Toolbar style={{justifyContent: 'space-between'}}>\n              <Hidden lgUp>\n                <IconButton edge=\"start\" aria-label=\"menu\" onClick={() => {this.toggle_drawer()}}>\n                  <MenuIcon />\n                </IconButton>\n              </Hidden>\n              <Hidden mdDown>\n              <List className={classes.appBar_list}>\n                <ListItem button component=\"a\" key={'home'} href=\"/\">\n                  <ListItemText primary={'Home'} />\n                </ListItem>\n                <ListItem button component=\"a\" key={'order'} href=\"/order\">\n                  <ListItemText primary={'Orders'} />\n                </ListItem>\n                <ListItem button component=\"a\" key={'history'} href=\"/history\">\n                  <ListItemText primary={'History'} />\n                </ListItem>\n                <ListItem button component=\"a\" key={'market'} href=\"/market\">\n                  <ListItemText primary={'Market'} />\n                </ListItem>\n              </List>\n              </Hidden>\n              <Box>\n              <Switch\n                checked={this.props.portfolio_type}\n                onChange={() => {this.props.handlePortfolioChange()}}\n                name=\"portfolio_type\"\n              />\n                <IconButton onClick={() => {this.props.handleThemeChange()}}>\n                  {theme.palette.type === 'dark' ? <Brightness7Icon  /> : <Brightness4Icon />}\n                </IconButton>\n                <IconButton href=\"/profile\">\n                  <AccountCircle />\n                </IconButton>\n              </Box>\n            </Toolbar>\n            <SwipeableDrawer\n              anchor='left'\n              open={this.state.drawer_open}\n              onClose={() => {this.toggle_drawer()}}\n              onOpen={() => {this.toggle_drawer()}}\n            >\n              <List className={classes.drawer_list}>\n                <ListItem button component=\"a\" key={'home'} href=\"/\">\n                  <ListItemText primary={'Home'} />\n                </ListItem>\n                <ListItem button component=\"a\" key={'orders'} href=\"/order\">\n                  <ListItemText primary={'Orders'} />\n                </ListItem>\n                <ListItem button component=\"a\" key={'history'} href=\"/history\">\n                  <ListItemText primary={'History'} />\n                </ListItem>\n                <ListItem button component=\"a\" key={'market'} href=\"/market\">\n                  <ListItemText primary={'Market'} />\n                </ListItem>\n              </List>\n            </SwipeableDrawer>\n            </Container>\n        </AppBar>\n    ); \n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Menu);","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n\n}\n\nclass Toast extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        active_index: 0\n    };\n  } \n\n  componentDidMount(){\n      console.log('Toast')\n      console.log(this.props)\n  }\n\n\n  render() {\n    const { classes, theme, portfolio} = this.props;\n    return (\n        <Alert variant=\"filled\" severity={this.props.type} style={{position:'absolute', bottom: 10, left:10, minWidth:100, opacity: this.props.opacity}}>\n            {this.props.message}\n        </Alert>\n    ); \n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Toast);","import React, {Fragment} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider, responsiveFontSizes} from '@material-ui/core/styles';\nimport {dark_theme, light_theme} from './utils/Theme';\n\n// PAGES\nimport Unknown from './pages/Unknown'\nimport Home from './pages/Home'\nimport Portfolio from './pages/Portfolio'\nimport BuyOrder from './pages/BuyOrder'\nimport Position from './pages/Position'\nimport Order from './pages/Order'\nimport Market from './pages/Market'\nimport Model from './pages/Model'\nimport History from './pages/History'\nimport Auth from './pages/Auth'\nimport Profile from './pages/Profile'\n// COMPONENTS\nimport Menu from './components/Menu'\nimport Toast from './components/Toast'\nimport {get, post, put} from './utils/Api'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: null,\n      message_type: null,\n      opacity: 0,\n      theme: localStorage.getItem('theme'),\n      logged_in: localStorage.getItem('token') ? true : false,\n      user: JSON.parse(localStorage.getItem('user')),\n      portfolio_type: localStorage.getItem('portfolio_type') === 'true',\n      errors: {},\n      p_demo: JSON.parse(localStorage.getItem('p_demo')),\n      p_real: JSON.parse(localStorage.getItem('p_real')),\n      loading: false\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handlePortfolioChange = () => {\n    localStorage.setItem('portfolio_type', !this.state.portfolio_type)\n    this.setState({portfolio_type: !this.state.portfolio_type})\n  }\n\n  handleThemeChange = () => {\n    if (this.state.theme === 'light'){\n      localStorage.setItem('theme', 'dark')\n      this.setState({ theme: 'dark' });\n    } else {\n      localStorage.setItem('theme', 'light')\n      this.setState({ theme: 'light' });\n    }    \n  }\n\n  retrieveHome = () => {\n    console.log('retrieveHome')\n    this.setState({loading:true})\n    get('api/home/').then((resp) => {\n      if (resp.status === 200){\n        var response = JSON.parse(resp.response)\n        console.log(response)\n        this.setState({\n          p_demo: response.p_demo,\n          p_real: response.p_real,\n          loading: false\n        })\n        localStorage.setItem('p_demo', JSON.stringify(response.p_demo))\n        localStorage.setItem('p_real', JSON.stringify(response.p_real))\n      }\n      if (resp.status === 401){\n        console.log('Unauthorized')\n        this.logout()\n      }\n    })\n  }\n\n  sign_up = async (params) => {\n    this.setState({errors: {}})\n    post('api/user/', params).then((resp) => {\n      var response = JSON.parse(resp.response)\n        if(resp.status === 201){\n          localStorage.setItem('token', response.token)\n          localStorage.setItem('user', JSON.stringify(response.user))\n          this.setState({logged_in: true, user: response.user})\n        } else {\n            var errors = this.state.errors\n            for (const err in response) {\n              errors[err] = response[err]\n            }\n            this.setState({errors: errors})\n        }\n    })\n  }\n\n  log_in = async (params) => {\n    this.setState({errors: {}})\n    post('api/token-auth/', params).then((resp) => {\n        let response = JSON.parse(resp.response)\n        if(resp.status === 200){\n            localStorage.setItem('token', response.token)\n            localStorage.setItem('user', JSON.stringify(response.user))\n            this.setState({logged_in: true, user: response.user})\n        } else {\n            var errors = this.state.errors\n            for (const err in response) {\n              errors[err] = response[err]\n            }\n            this.setState({errors: errors})\n        }\n    })\n  }\n\n  logout = async () => {\n    localStorage.clear()\n    this.setState({logged_in: false, user: {}, errors:{}})\n  }\n\n  update_user = async (params) => {\n    console.log('update_user')\n    this.setState({errors: {}})\n    console.log(params)\n    put('api/user/', params).then((resp) => {\n      console.log(resp)\n      var response = JSON.parse(resp.response)\n        if(resp.status === 201){\n          localStorage.setItem('user', JSON.stringify(response.user))\n          this.setState({user: response.user})\n          this.display_toast('Account updated!', 'success')\n        } else {\n            var errors = this.state.errors\n            for (const err in response) {\n              errors[err] = response[err]\n            }\n            this.setState({errors: errors})\n        }\n    })\n  }\n\n  update_portfolio = async (params) => {\n    console.log('update_portfolio')\n    this.setState({errors: {}})\n    console.log(params)\n    put('api/portfolio/', params).then((resp) => {\n      var response = JSON.parse(resp.response)\n      console.log(response.portfolio)\n        if(resp.status === 201){\n          if (response.portfolio.portfolio_type === true){\n            var p_real = this.state.p_real\n            p_real['portfolio'] = response.portfolio\n            localStorage.setItem('p_real', JSON.stringify(p_real))\n            this.setState({p_real: p_real})\n          } else {\n            var p_demo = this.state.p_demo\n            p_demo['portfolio'] = response.portfolio\n            localStorage.setItem('p_demo', JSON.stringify(p_demo))\n            this.setState({p_demo: p_demo})\n          }\n          this.display_toast('Portfolio updated!', 'success')\n        } else {\n            var errors = this.state.errors\n            for (const err in response) {\n              errors[err] = response[err]\n            }\n            this.setState({errors: errors})\n        }\n    })\n  }\n\n\n  display_toast = async (message, type) => {\n    this.setState({opacity: 1, message: message, message_type: type}, () => setTimeout(() => this.setState({opacity:0}),4000)); \n  }\n\n  render() {\n      return (\n        <ThemeProvider theme={this.state.theme === 'light' ? responsiveFontSizes(light_theme) : responsiveFontSizes(dark_theme)}>\n          <Router>\n              <CssBaseline />\n              <Switch>\n                {!this.state.logged_in &&\n                <Fragment>\n                  <Route exact path='/' render={(props) => <Auth {...props} sign_up={(params) => {this.sign_up(params)}} log_in={(params) => {this.log_in(params)}} handleChange={(e) => {this.handleChange(e)}} errors={this.state.errors}/>} />\n                  <Redirect from='*' to='/' />\n                </Fragment>\n                }\n                {this.state.logged_in &&\n                  <Fragment>\n                    <Menu handleThemeChange={() => {this.handleThemeChange()}} handlePortfolioChange={() => {this.handlePortfolioChange()}} portfolio_type={this.state.portfolio_type}/>\n                    {this.state.message !== null && <Toast type={this.state.message_type} message={this.state.message} opacity={this.state.opacity} />}\n                    <Switch>\n                      <Route exact={true} path=\"/\" render={(props) => <Home {...props} retrieve_home={()=>{this.retrieveHome()}} loading={this.state.loading} p_demo={this.state.p_demo} p_real={this.state.p_real} user={this.state.user} portfolio_type={this.state.portfolio_type} logout={() => {this.logout()}}/>} />\n                      <Route path=\"/portfolio\" render={(props) => <Portfolio {...props} portfolio_type={this.state.portfolio_type}/>} />\n                      <Route path=\"/position\" render={(props) => <Position {...props} portfolio_type={this.state.portfolio_type}/>} />\n                      <Route path=\"/buy_order\" render={(props) => <BuyOrder {...props} portfolio_type={this.state.portfolio_type}/>} />\n                      <Route path=\"/order\" render={(props) => <Order {...props} portfolio_type={this.state.portfolio_type}/>} />\n                      <Route path=\"/history\" render={(props) => <History {...props} portfolio_type={this.state.portfolio_type}/>} />\n                      <Route path=\"/market\" render={(props) => <Market {...props} user={this.state.user} portfolio_type={this.state.portfolio_type} p_demo={this.state.p_demo} p_real={this.state.p_real} /> } />\n                      <Route path=\"/model\" render={(props) => <Model {...props} user={this.state.user}/> } />\n                      <Route path=\"/profile\" render={(props) => \n                        <Profile {...props} user={this.state.user} p_demo={this.state.p_demo} p_real={this.state.p_real} update_user={(params) => {this.update_user(params)}} \n                                  logout={() => {this.logout()}} handleChange={(e) => {this.handleChange(e)}} errors={this.state.errors}\n                                  update_portfolio={(params) => {this.update_portfolio(params)}} /> }\n                      />\n                      <Route path=\"/404\" render={(props) => <Unknown {...props} />} />\n                      <Redirect to=\"/404\" />\n                    </Switch>\n                  </Fragment>\n                }\n              </Switch>\n              \n          </Router>\n          </ThemeProvider>\n      ); \n  }\n}\n\nexport default App\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}